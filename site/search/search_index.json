{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview This repository contains examples and documentation for using open network management tools and protocols with Arista EOS. This includes OpenConfig, NETCONF, and RESTCONF.","title":"Introduction"},{"location":"#overview","text":"This repository contains examples and documentation for using open network management tools and protocols with Arista EOS. This includes OpenConfig, NETCONF, and RESTCONF.","title":"Overview"},{"location":"configuration/","text":"Overview CLI OpenConfig (configuration) Platform compatibility GNMI OCTA How to enable Octa API models Certificate based authentication for gNMI Test example NETCONF RESTCONF A note on changing ports gRPC RPC role authorizations Enable AFT mapping Troubleshooting Limitations Supported OpenConfig paths References / Resources Overview There are a number of options for working with open management protocols with Arista EOS. Here are the methods used to configre them on EOS as well as troubleshooting tips. OpenConfig Platform compatibility All EOS flavors support OpenConfig (phyiscal, virtual, containerized, cloud). GNMI To start the gNMI server, which listens by default on TCP/6030 configured the gRPC transport under management api gnmi in the global config mode: Default VRF management api gnmi transport grpc openmgmt Non-default VRF management api gnmi transport grpc openmgmt vrf management Changing the port: management api gnmi transport grpc openmgmt port 5900 Apply ACL management api gnmi transport grpc openmgmt ip access-group ACCESS_GROUP Note The ACL should be a standard ACL allowing hosts or subnets. Authenticate the connection with TLS management api gnmi transport grpc openmgmt ssl profile PROFILE Enable authorization of incoming requests management api gnmi transport grpc openmgmt authorization requests Status check #show management api gnmi Octa: No Enabled: Yes Server: running on port 6030, in default VRF SSL Profile: none QoS DSCP: none OCTA The OpenConfing agent (gNMI API) can leverage the EOS state streaming agent's (TerminAttr) libraries, thus exposing EOS native paths. If Octa (OpenConfig+TerminAttr) is enabled then OpenConfig, in addition to accepting OpenConfig paths in gNMI get/subscribe requests, will also support EOS native paths (e.g. Sysdb/Smash paths). This feature was introduced in 4.22.1F . gNMI requests received by Octa are interpreted as either OpenConfig or TerminAttr requests, as follows. gNMI requests containing an origin of eos_native are processed as TerminAttr requests. Requests lacking an origin of eos_native are treated as OpenConfig requests. A gNMI client that supports specification of an origin as part of the associated RPC is a requirement. Note Support for sending GET/SUBSCRIBE requests to both an openconfig and an eos-native path in the same call is not yet supported. How to enable Octa Octa can be enable by adding provider eos-native under management api gnmi SW(config-mgmt-api-gnmi)#provider eos-native Status check #show management api gnmi Octa: enabled Enabled: Yes Server: running on port 6030, in default VRF SSL Profile: none QoS DSCP: none API models Starting in EOS 4.24.0F it is possible to configure the Smash paths that Octa has access to. Under the management api models mode, the provider smash submode allows for enabling or disabling a Smash path with the [no] path <Smash path> [disbaled] command. SW(config)#management api models SW(config-mgmt-api-models)#provider smash SW(config-provider-smash)#path forwarding/status SW(config-provider-smash)#path routing/status disabled SW(config-provider-smash)#path routing/isis/lsdb SW(config-provider-smash)#exit Note that every time a new path is added the Octa agent has to be restarted. EOS CLI: (config)#management api gnmi (config-mgmt-api-gnmi)#transport grpc <NAME> (config-gnmi-transport-def)#shut (config-gnmi-transport-def)#no shut Bash: $ sudo killall Octa show management api models will list the Smash paths enabled/disabled e.g.: #show management api models provider smash path /Smash/bridging path /Smash/forwarding/status path /Smash/routing/isis/lsdb path /Smash/routing path /Smash/routing/status disabled provider sysdb Certificate based authentication for gNMI The following example shows how to create a Root CA cert and key, the server cert and key and the client cert and key. On the switch side: Generate the private key for the CA: openssl genrsa -out rootCA.key 2048 Generate the CA certificate: openssl req -x509 -new -nodes -key rootCA.key -out rootCA.pem Generate the server key: openssl genrsa -out gnmi_server.key 2048 Generate the server's certificate signing request: openssl req -new -key gnmi_server.key -out gnmi_server.csr Generate the server's cert: shell openssl x509 -req -in gnmi_server.csr -CA rootCA.pem -CAkey rootCA.key \\ -CAcreateserial -out gnmi_server.crt` copy rootCA.key and rootCA.pem to the gNMI collector Exit from bash and copy rootCA.key and gnmi_server.key to sslkey directory. e.g.: copy flash:gnmi_server.key sslkey: ) copy rootCA.pem and gnmi_server.crt to certificate directory, e.g.: copy flash:scripts/rootCA.pem certificate: Create the SSL profile text management security ssl profile gnmi certificate gnmi_server.crt key gnmi_server.key trust certificate rootCA.pem Apply the profile ```text management api gnmi transport grpc def ssl profile gnmi provider eos-native ``` On the remote machine which runs the gNMI queries: Generate the client key: openssl genrsa -out gnmi_client.key 2048 Generate the certificate signing request: openssl req -new -key gnmi_client.key -out gnmi_client.csr Sign the cert and generate the .crt file: shell openssl x509 -req -in gnmi_client.csr -CA rootCA.pem -CAkey rootCA.key \\ -CAcreateserial -out gnmi_client.crt Make sure that rootCA.key and rootCA.pem are in same directory as gnmi_client.key and gnmi_client.crt Test example gnmi -tls -addr 172.28.161.138:6030 -keyfile gnmi_client.key \\ -certfile gnmi_client.crt get '/interfaces/interface[name=*]/state/counters' /interfaces/interface[name=Management1]/state/counters: { \"openconfig-interfaces:in-broadcast-pkts\": \"14498549\", \"openconfig-interfaces:in-discards\": \"0\", \"openconfig-interfaces:in-errors\": \"0\", \"openconfig-interfaces:in-fcs-errors\": \"0\", \"openconfig-interfaces:in-multicast-pkts\": \"20571\", \"openconfig-interfaces:in-octets\": \"1042742343\", \"openconfig-interfaces:in-unicast-pkts\": \"61135\", \"openconfig-interfaces:out-broadcast-pkts\": \"20\", \"openconfig-interfaces:out-discards\": \"0\", \"openconfig-interfaces:out-errors\": \"0\", \"openconfig-interfaces:out-multicast-pkts\": \"20232\", \"openconfig-interfaces:out-octets\": \"12004699\", \"openconfig-interfaces:out-unicast-pkts\": \"49070\" } NETCONF Currently supported NETCONF operations: get, get-config, get-schema, edit-config, lock, unlock, close-session, kill-session. To configure NETCONF in default VRF we can enable the ssh transport under management api netconf : Default VRF management api netconf transport ssh test Non-default VRF management api netconf transport ssh test vrf management Changing the port: management api netconf transport ssh test port 830 Apply ACL management api netconf transport ssh test ip access-group ACCESS_GROUP Note The ACL should be a standard ACL allowing hosts or subnets. Status check: #show management api netconf Enabled: Yes Server: running on port 830, in management VRF RESTCONF TLS authentication is required for RESTCONF to operate. This Cli command generates a self-signed cert: security pki certificate generate self-signed restconf.crt key restconf.key generate rsa 2048 parameters common-name restconf Create ssl profile: management security ssl profile restconf certificate restconf.crt key restconf.key Configure RESTCONF: Default VRF: management api restconf transport https test ssl profile restconf Non-default VRF management api restconf transport https test ssl profile restconf vrf management Changing the port: management api restconf transport https test port 5900 Apply ACL management api restconf transport https test ip access-group ACCESS_GROUP Note The ACL should be a standard ACL allowing hosts or subnets. Status check #show management api restconf Enabled: Yes Server: running on port 6020, in management VRF SSL Profile: restconf QoS DSCP: none A note on changing ports When changing the default ports one has to make sure they are also allowed in the control-plane ACL. The default control-plane ACL cannot be modified, so a new one has to be created and applied under system control-plane (EOS 4.23+ ) or control-plane (pre-EOS 4.23 ). The fastest way to do this is to clone the existing control-plane and add new permit rules. e.g.: Reading the default CP ACL can be done with show ip access-lists default-control-plane-acl ```text show ip access-lists default-control-plane-acl IP Access List default-control-plane-acl [readonly] counters per-entry 10 permit icmp any any [match 7172 packets, 1 day, 20:46:09 ago] 20 permit ip any any tracked [match 98544013 packets, 0:00:36 ago] 30 permit udp any any eq bfd ttl eq 255 40 permit udp any any eq bfd-echo ttl eq 254 50 permit udp any any eq multihop-bfd 60 permit udp any any eq micro-bfd 70 permit udp any any eq sbfd 80 permit udp any eq sbfd any eq sbfd-initiator 90 permit ospf any any 100 permit tcp any any eq ssh telnet www snmp bgp https msdp ldp netconf-ssh gnmi [match 873 packets, 1 day, 20:43:39 ago] 110 permit udp any any eq bootps bootpc snmp rip ntp ldp [match 970 packets, 1:43:38 ago] 120 permit tcp any any eq mlag ttl eq 255 130 permit udp any any eq mlag ttl eq 255 140 permit vrrp any any 150 permit ahp any any 160 permit pim any any 170 permit igmp any any 180 permit tcp any any range 5900 5910 190 permit tcp any any range 50000 50100 [match 1480505 packets, 1 day, 20:43:16 ago] 200 permit udp any any range 51000 51100 210 permit tcp any any eq 3333 220 permit tcp any any eq nat ttl eq 255 230 permit tcp any eq bgp any 240 permit rsvp any any 250 permit tcp any any eq 6040 260 permit tcp any any eq 5541 ttl eq 255 270 permit tcp any any eq 5542 ttl eq 255 ``` There are multiple ways to quickly edit and remove the unnecessary match outputs, in this example we'll use sed on EOS. Save the file to /mnt/flash : show ip access-lists default-control-plane-acl | redirect flash:cpacl.txt Drop down to bash: #bash Go to /mnt/flash and remove the match outputs shell cd /mnt/flash sudo sed -i \"s/\\[.*//g\" cpacl.txt Reading the file now should be clean without all the match outputs like below: text cat cpacl.txt IP Access List default-control-plane-acl counters per-entry 10 permit icmp any any 20 permit ip any any tracked 30 permit udp any any eq bfd ttl eq 255 40 permit udp any any eq bfd-echo ttl eq 254 50 permit udp any any eq multihop-bfd 60 permit udp any any eq micro-bfd 70 permit udp any any eq sbfd 80 permit udp any eq sbfd any eq sbfd-initiator 90 permit ospf any any 100 permit tcp any any eq ssh telnet www snmp bgp https msdp ldp netconf-ssh gnmi 110 permit udp any any eq bootps bootpc snmp rip ntp ldp 120 permit tcp any any eq mlag ttl eq 255 130 permit udp any any eq mlag ttl eq 255 140 permit vrrp any any 150 permit ahp any any 160 permit pim any any 170 permit igmp any any 180 permit tcp any any range 5900 5910 190 permit tcp any any range 50000 50100 200 permit udp any any range 51000 51100 210 permit tcp any any eq 3333 220 permit tcp any any eq nat ttl eq 255 230 permit tcp any eq bgp any 240 permit rsvp any any 250 permit tcp any any eq 6040 260 permit tcp any any eq 5541 ttl eq 255 270 permit tcp any any eq 5542 ttl eq 255 Now we can just copy that ACLs content into a new ACL, add our new rules and apply it on the control-plane text $ exit logout (config)# ip access-list custom-cp (config)# <paste the content of the default CP from the file created> (config)# 280 permit tcp any any eq 5900 Apply the new ACL Default VRF text sysem control-plane ip access-group custom-cp in Non-default VRF text sysem control-plane ip access-group custom-cp vrf management in RPC role authorizations Starting in EOS 4.24.1F it is possible to perform authorization of each RPC (i.e. GET, SET, SUBSCRIBE), if authorization requests is supplied as described above. During authorization, the OpenConfig agent will communicate with the AAA agent, allowing authorization policies or roles to permit or deny the new tokens OpenConfig.Get and OpenConfig.Set. For example, a role may be defined such as: role oc-read 10 permit command OpenConfig.Get A user which is assigned to this role would be allowed to issue a gNMI get or subscribe request, but not a set request. Note that this is only available for gNMI. Enable AFT mapping By default, mapping of the FIB (forwarding information base) to the OpenConfig AFT (abstract forwarding table) model is disabled, as the volume of data can be large. Starting in EOS 4.25.1F it is possible to enable these mappings, for IPV4, IPV6, or both, as described below: management api models ipv4-unicast ipv6-unicast Troubleshooting The OpenConfig agent handles all transports described above: gNMI, RESTCONF, and NETCONF. The agent log file is present at /var/log/agents/OpenConfig-{PID} . Lines that begin with E are errors. Debug logging can be enabled with a regular trace command. Here are a couple of examples: (config)#trace OpenConfig setting server/9 # For server (gNMI) traces (config)#trace OpenConfig setting */9 # For all traces with verbose setting similary if Octa is enabled: (config)#trace Octa setting server/9 # For server (gNMI) traces (config)#trace Octa setting */9 # For all traces with verbose setting Limitations In EOS versions older than 4.24.0F , not all Smash paths were accessible via Octa. Starting in EOS 4.24.0F configuring the Smash paths that Octa has access to will also affect OpenConfig. Enabling a Smash path for Octa can result in extra YANG paths being populated in OpenConfig. Disabling a Smash path can result in having some YANG paths missing in OpenConfig. The %<zone-id> optional suffix in YANG ietf:ipv4-address , and ietf:ipv6-address types are not supported. An OpenConfig client update/merge/replace request can erase config that is not modified by the incoming request. This happens if a config that is part of a certain mountpoint but not supported by OpenConfig is configured via CLI prior to the OpenConfig client update/merge/replace request is processed. Below listed commands are the only QoS config commands that are supported ```text class-map type qos match-any match vlan policy-map type qos class police cir bc kbytes class class-default interface Ethernet | port-channel service-policy type qos input ``` Supported OpenConfig paths Please refer to the TOIs for the EOS releases to see the new list of paths supported per release. For convenience, supported paths may be found at https://eos.arista.com/path-report . References / Resources The OpenConfig working group: http://openconfig.net/ Repository of gNMI specifications: https://github.com/openconfig/reference/","title":"Device Configuration"},{"location":"configuration/#overview","text":"There are a number of options for working with open management protocols with Arista EOS. Here are the methods used to configre them on EOS as well as troubleshooting tips.","title":"Overview"},{"location":"configuration/#openconfig","text":"","title":"OpenConfig"},{"location":"configuration/#platform-compatibility","text":"All EOS flavors support OpenConfig (phyiscal, virtual, containerized, cloud).","title":"Platform compatibility"},{"location":"configuration/#gnmi","text":"To start the gNMI server, which listens by default on TCP/6030 configured the gRPC transport under management api gnmi in the global config mode: Default VRF management api gnmi transport grpc openmgmt Non-default VRF management api gnmi transport grpc openmgmt vrf management Changing the port: management api gnmi transport grpc openmgmt port 5900 Apply ACL management api gnmi transport grpc openmgmt ip access-group ACCESS_GROUP Note The ACL should be a standard ACL allowing hosts or subnets. Authenticate the connection with TLS management api gnmi transport grpc openmgmt ssl profile PROFILE Enable authorization of incoming requests management api gnmi transport grpc openmgmt authorization requests Status check #show management api gnmi Octa: No Enabled: Yes Server: running on port 6030, in default VRF SSL Profile: none QoS DSCP: none","title":"GNMI"},{"location":"configuration/#octa","text":"The OpenConfing agent (gNMI API) can leverage the EOS state streaming agent's (TerminAttr) libraries, thus exposing EOS native paths. If Octa (OpenConfig+TerminAttr) is enabled then OpenConfig, in addition to accepting OpenConfig paths in gNMI get/subscribe requests, will also support EOS native paths (e.g. Sysdb/Smash paths). This feature was introduced in 4.22.1F . gNMI requests received by Octa are interpreted as either OpenConfig or TerminAttr requests, as follows. gNMI requests containing an origin of eos_native are processed as TerminAttr requests. Requests lacking an origin of eos_native are treated as OpenConfig requests. A gNMI client that supports specification of an origin as part of the associated RPC is a requirement. Note Support for sending GET/SUBSCRIBE requests to both an openconfig and an eos-native path in the same call is not yet supported.","title":"OCTA"},{"location":"configuration/#how-to-enable-octa","text":"Octa can be enable by adding provider eos-native under management api gnmi SW(config-mgmt-api-gnmi)#provider eos-native Status check #show management api gnmi Octa: enabled Enabled: Yes Server: running on port 6030, in default VRF SSL Profile: none QoS DSCP: none","title":"How to enable Octa"},{"location":"configuration/#api-models","text":"Starting in EOS 4.24.0F it is possible to configure the Smash paths that Octa has access to. Under the management api models mode, the provider smash submode allows for enabling or disabling a Smash path with the [no] path <Smash path> [disbaled] command. SW(config)#management api models SW(config-mgmt-api-models)#provider smash SW(config-provider-smash)#path forwarding/status SW(config-provider-smash)#path routing/status disabled SW(config-provider-smash)#path routing/isis/lsdb SW(config-provider-smash)#exit Note that every time a new path is added the Octa agent has to be restarted. EOS CLI: (config)#management api gnmi (config-mgmt-api-gnmi)#transport grpc <NAME> (config-gnmi-transport-def)#shut (config-gnmi-transport-def)#no shut Bash: $ sudo killall Octa show management api models will list the Smash paths enabled/disabled e.g.: #show management api models provider smash path /Smash/bridging path /Smash/forwarding/status path /Smash/routing/isis/lsdb path /Smash/routing path /Smash/routing/status disabled provider sysdb","title":"API models"},{"location":"configuration/#certificate-based-authentication-for-gnmi","text":"The following example shows how to create a Root CA cert and key, the server cert and key and the client cert and key. On the switch side: Generate the private key for the CA: openssl genrsa -out rootCA.key 2048 Generate the CA certificate: openssl req -x509 -new -nodes -key rootCA.key -out rootCA.pem Generate the server key: openssl genrsa -out gnmi_server.key 2048 Generate the server's certificate signing request: openssl req -new -key gnmi_server.key -out gnmi_server.csr Generate the server's cert: shell openssl x509 -req -in gnmi_server.csr -CA rootCA.pem -CAkey rootCA.key \\ -CAcreateserial -out gnmi_server.crt` copy rootCA.key and rootCA.pem to the gNMI collector Exit from bash and copy rootCA.key and gnmi_server.key to sslkey directory. e.g.: copy flash:gnmi_server.key sslkey: ) copy rootCA.pem and gnmi_server.crt to certificate directory, e.g.: copy flash:scripts/rootCA.pem certificate: Create the SSL profile text management security ssl profile gnmi certificate gnmi_server.crt key gnmi_server.key trust certificate rootCA.pem Apply the profile ```text management api gnmi transport grpc def ssl profile gnmi provider eos-native ``` On the remote machine which runs the gNMI queries: Generate the client key: openssl genrsa -out gnmi_client.key 2048 Generate the certificate signing request: openssl req -new -key gnmi_client.key -out gnmi_client.csr Sign the cert and generate the .crt file: shell openssl x509 -req -in gnmi_client.csr -CA rootCA.pem -CAkey rootCA.key \\ -CAcreateserial -out gnmi_client.crt Make sure that rootCA.key and rootCA.pem are in same directory as gnmi_client.key and gnmi_client.crt","title":"Certificate based authentication for gNMI"},{"location":"configuration/#test-example","text":"gnmi -tls -addr 172.28.161.138:6030 -keyfile gnmi_client.key \\ -certfile gnmi_client.crt get '/interfaces/interface[name=*]/state/counters' /interfaces/interface[name=Management1]/state/counters: { \"openconfig-interfaces:in-broadcast-pkts\": \"14498549\", \"openconfig-interfaces:in-discards\": \"0\", \"openconfig-interfaces:in-errors\": \"0\", \"openconfig-interfaces:in-fcs-errors\": \"0\", \"openconfig-interfaces:in-multicast-pkts\": \"20571\", \"openconfig-interfaces:in-octets\": \"1042742343\", \"openconfig-interfaces:in-unicast-pkts\": \"61135\", \"openconfig-interfaces:out-broadcast-pkts\": \"20\", \"openconfig-interfaces:out-discards\": \"0\", \"openconfig-interfaces:out-errors\": \"0\", \"openconfig-interfaces:out-multicast-pkts\": \"20232\", \"openconfig-interfaces:out-octets\": \"12004699\", \"openconfig-interfaces:out-unicast-pkts\": \"49070\" }","title":"Test example"},{"location":"configuration/#netconf","text":"Currently supported NETCONF operations: get, get-config, get-schema, edit-config, lock, unlock, close-session, kill-session. To configure NETCONF in default VRF we can enable the ssh transport under management api netconf : Default VRF management api netconf transport ssh test Non-default VRF management api netconf transport ssh test vrf management Changing the port: management api netconf transport ssh test port 830 Apply ACL management api netconf transport ssh test ip access-group ACCESS_GROUP Note The ACL should be a standard ACL allowing hosts or subnets. Status check: #show management api netconf Enabled: Yes Server: running on port 830, in management VRF","title":"NETCONF"},{"location":"configuration/#restconf","text":"TLS authentication is required for RESTCONF to operate. This Cli command generates a self-signed cert: security pki certificate generate self-signed restconf.crt key restconf.key generate rsa 2048 parameters common-name restconf Create ssl profile: management security ssl profile restconf certificate restconf.crt key restconf.key Configure RESTCONF: Default VRF: management api restconf transport https test ssl profile restconf Non-default VRF management api restconf transport https test ssl profile restconf vrf management Changing the port: management api restconf transport https test port 5900 Apply ACL management api restconf transport https test ip access-group ACCESS_GROUP Note The ACL should be a standard ACL allowing hosts or subnets. Status check #show management api restconf Enabled: Yes Server: running on port 6020, in management VRF SSL Profile: restconf QoS DSCP: none","title":"RESTCONF"},{"location":"configuration/#a-note-on-changing-ports","text":"When changing the default ports one has to make sure they are also allowed in the control-plane ACL. The default control-plane ACL cannot be modified, so a new one has to be created and applied under system control-plane (EOS 4.23+ ) or control-plane (pre-EOS 4.23 ). The fastest way to do this is to clone the existing control-plane and add new permit rules. e.g.: Reading the default CP ACL can be done with show ip access-lists default-control-plane-acl ```text","title":"A note on changing ports"},{"location":"configuration/#show-ip-access-lists-default-control-plane-acl","text":"IP Access List default-control-plane-acl [readonly] counters per-entry 10 permit icmp any any [match 7172 packets, 1 day, 20:46:09 ago] 20 permit ip any any tracked [match 98544013 packets, 0:00:36 ago] 30 permit udp any any eq bfd ttl eq 255 40 permit udp any any eq bfd-echo ttl eq 254 50 permit udp any any eq multihop-bfd 60 permit udp any any eq micro-bfd 70 permit udp any any eq sbfd 80 permit udp any eq sbfd any eq sbfd-initiator 90 permit ospf any any 100 permit tcp any any eq ssh telnet www snmp bgp https msdp ldp netconf-ssh gnmi [match 873 packets, 1 day, 20:43:39 ago] 110 permit udp any any eq bootps bootpc snmp rip ntp ldp [match 970 packets, 1:43:38 ago] 120 permit tcp any any eq mlag ttl eq 255 130 permit udp any any eq mlag ttl eq 255 140 permit vrrp any any 150 permit ahp any any 160 permit pim any any 170 permit igmp any any 180 permit tcp any any range 5900 5910 190 permit tcp any any range 50000 50100 [match 1480505 packets, 1 day, 20:43:16 ago] 200 permit udp any any range 51000 51100 210 permit tcp any any eq 3333 220 permit tcp any any eq nat ttl eq 255 230 permit tcp any eq bgp any 240 permit rsvp any any 250 permit tcp any any eq 6040 260 permit tcp any any eq 5541 ttl eq 255 270 permit tcp any any eq 5542 ttl eq 255 ``` There are multiple ways to quickly edit and remove the unnecessary match outputs, in this example we'll use sed on EOS. Save the file to /mnt/flash : show ip access-lists default-control-plane-acl | redirect flash:cpacl.txt Drop down to bash: #bash Go to /mnt/flash and remove the match outputs shell cd /mnt/flash sudo sed -i \"s/\\[.*//g\" cpacl.txt Reading the file now should be clean without all the match outputs like below: text cat cpacl.txt IP Access List default-control-plane-acl counters per-entry 10 permit icmp any any 20 permit ip any any tracked 30 permit udp any any eq bfd ttl eq 255 40 permit udp any any eq bfd-echo ttl eq 254 50 permit udp any any eq multihop-bfd 60 permit udp any any eq micro-bfd 70 permit udp any any eq sbfd 80 permit udp any eq sbfd any eq sbfd-initiator 90 permit ospf any any 100 permit tcp any any eq ssh telnet www snmp bgp https msdp ldp netconf-ssh gnmi 110 permit udp any any eq bootps bootpc snmp rip ntp ldp 120 permit tcp any any eq mlag ttl eq 255 130 permit udp any any eq mlag ttl eq 255 140 permit vrrp any any 150 permit ahp any any 160 permit pim any any 170 permit igmp any any 180 permit tcp any any range 5900 5910 190 permit tcp any any range 50000 50100 200 permit udp any any range 51000 51100 210 permit tcp any any eq 3333 220 permit tcp any any eq nat ttl eq 255 230 permit tcp any eq bgp any 240 permit rsvp any any 250 permit tcp any any eq 6040 260 permit tcp any any eq 5541 ttl eq 255 270 permit tcp any any eq 5542 ttl eq 255 Now we can just copy that ACLs content into a new ACL, add our new rules and apply it on the control-plane text $ exit logout (config)# ip access-list custom-cp (config)# <paste the content of the default CP from the file created> (config)# 280 permit tcp any any eq 5900 Apply the new ACL Default VRF text sysem control-plane ip access-group custom-cp in Non-default VRF text sysem control-plane ip access-group custom-cp vrf management in","title":"show ip access-lists default-control-plane-acl"},{"location":"configuration/#rpc-role-authorizations","text":"Starting in EOS 4.24.1F it is possible to perform authorization of each RPC (i.e. GET, SET, SUBSCRIBE), if authorization requests is supplied as described above. During authorization, the OpenConfig agent will communicate with the AAA agent, allowing authorization policies or roles to permit or deny the new tokens OpenConfig.Get and OpenConfig.Set. For example, a role may be defined such as: role oc-read 10 permit command OpenConfig.Get A user which is assigned to this role would be allowed to issue a gNMI get or subscribe request, but not a set request. Note that this is only available for gNMI.","title":"RPC role authorizations"},{"location":"configuration/#enable-aft-mapping","text":"By default, mapping of the FIB (forwarding information base) to the OpenConfig AFT (abstract forwarding table) model is disabled, as the volume of data can be large. Starting in EOS 4.25.1F it is possible to enable these mappings, for IPV4, IPV6, or both, as described below: management api models ipv4-unicast ipv6-unicast","title":"Enable AFT mapping"},{"location":"configuration/#troubleshooting","text":"The OpenConfig agent handles all transports described above: gNMI, RESTCONF, and NETCONF. The agent log file is present at /var/log/agents/OpenConfig-{PID} . Lines that begin with E are errors. Debug logging can be enabled with a regular trace command. Here are a couple of examples: (config)#trace OpenConfig setting server/9 # For server (gNMI) traces (config)#trace OpenConfig setting */9 # For all traces with verbose setting similary if Octa is enabled: (config)#trace Octa setting server/9 # For server (gNMI) traces (config)#trace Octa setting */9 # For all traces with verbose setting","title":"Troubleshooting"},{"location":"configuration/#limitations","text":"In EOS versions older than 4.24.0F , not all Smash paths were accessible via Octa. Starting in EOS 4.24.0F configuring the Smash paths that Octa has access to will also affect OpenConfig. Enabling a Smash path for Octa can result in extra YANG paths being populated in OpenConfig. Disabling a Smash path can result in having some YANG paths missing in OpenConfig. The %<zone-id> optional suffix in YANG ietf:ipv4-address , and ietf:ipv6-address types are not supported. An OpenConfig client update/merge/replace request can erase config that is not modified by the incoming request. This happens if a config that is part of a certain mountpoint but not supported by OpenConfig is configured via CLI prior to the OpenConfig client update/merge/replace request is processed. Below listed commands are the only QoS config commands that are supported ```text class-map type qos match-any match vlan policy-map type qos class police cir bc kbytes class class-default interface Ethernet | port-channel service-policy type qos input ```","title":"Limitations"},{"location":"configuration/#supported-openconfig-paths","text":"Please refer to the TOIs for the EOS releases to see the new list of paths supported per release. For convenience, supported paths may be found at https://eos.arista.com/path-report .","title":"Supported OpenConfig paths"},{"location":"configuration/#references-resources","text":"The OpenConfig working group: http://openconfig.net/ Repository of gNMI specifications: https://github.com/openconfig/reference/","title":"References / Resources"},{"location":"examples/","text":"Overview In the examples folder we provide a variety of examples that will show how to use some of the many third party tools to interact with one of the GRPC interfaces(gNMI,gNOI and gRIBI) within Arista EOS. gNMI clients arista gnmi client gnmic gnmi-gateway golang python","title":"examples"},{"location":"examples/#overview","text":"In the examples folder we provide a variety of examples that will show how to use some of the many third party tools to interact with one of the GRPC interfaces(gNMI,gNOI and gRIBI) within Arista EOS.","title":"Overview"},{"location":"examples/#gnmi-clients","text":"arista gnmi client gnmic gnmi-gateway golang python","title":"gNMI clients"},{"location":"examples/ansible/","text":"Ansible collections for Edit the inventory file Ansible collection for grpc Run the playbook overview In this ansible collection we show how to use ansible to find all the available modules within a Arista EOS device using the capabilities method within gNMI. Edit the inventory file to match your environment [leaf] 127.0.0.1 ansible_user=admin ansible_password=admin [all:vars] ansible_user=admin ansible_password=admin ansible_become_pass=admin ansible_python_interpreter=/usr/bin/python3 ansible_port=6030 ansible_connection=nokia.grpc.gnmi ansible_gnmi_encoding=JSON gNMI collection ansible-galaxy collection install nokia.openconfig Run the playbook ansible-playbook -i inventory capabilities.yaml output of playbook ok: [10.20.30.67] => { \"msg\": { \"gNMIVersion\": \"0.7.0\", \"supportedEncodings\": [ \"JSON\", \"JSON_IETF\", \"ASCII\" ], \"supportedModels\": [ { \"name\": \"arista-exp-eos-multicast\", \"organization\": \"Arista Networks <http://arista.com/>\" }, { \"name\": \"arista-exp-eos-evpn\", \"organization\": \"Arista Networks, Inc.\" },","title":"Ansible playbook example demo"},{"location":"examples/ansible/#overview","text":"In this ansible collection we show how to use ansible to find all the available modules within a Arista EOS device using the capabilities method within gNMI.","title":"overview"},{"location":"examples/ansible/#edit-the-inventory-file-to-match-your-environment","text":"[leaf] 127.0.0.1 ansible_user=admin ansible_password=admin [all:vars] ansible_user=admin ansible_password=admin ansible_become_pass=admin ansible_python_interpreter=/usr/bin/python3 ansible_port=6030 ansible_connection=nokia.grpc.gnmi ansible_gnmi_encoding=JSON","title":"Edit the inventory file to match your environment"},{"location":"examples/ansible/#gnmi-collection","text":"ansible-galaxy collection install nokia.openconfig","title":"gNMI collection"},{"location":"examples/ansible/#run-the-playbook","text":"ansible-playbook -i inventory capabilities.yaml","title":"Run the playbook"},{"location":"examples/ansible/#output-of-playbook","text":"ok: [10.20.30.67] => { \"msg\": { \"gNMIVersion\": \"0.7.0\", \"supportedEncodings\": [ \"JSON\", \"JSON_IETF\", \"ASCII\" ], \"supportedModels\": [ { \"name\": \"arista-exp-eos-multicast\", \"organization\": \"Arista Networks <http://arista.com/>\" }, { \"name\": \"arista-exp-eos-evpn\", \"organization\": \"Arista Networks, Inc.\" },","title":"output of playbook"},{"location":"examples/gnmi-clients/arista-gnmi/","text":"gNMI GET RPC Examples OpenConfig paths Get all information gnmi -addr 10.83.13.139:6030 -username admin -password arista get / Get the BGP configuration in the default VRF gnmi -addr 172.28.160.219:6030 -username admin -password arista get \\ '/network-instances/network-instance[name=default]/protocols/protocol[identifier=BGP][name=BGP]/bgp'` Reveal output /network-instances/network-instance[name=default]/protocols/protocol[identifier=BGP][name=BGP]/bgp: { \"openconfig-network-instance:global\": { \"confederation\": { \"config\": { \"identifier\": 0 }, \"state\": {p \"identifier\": 0 } }, \"config\": { \"as\": 4206000022, \"router-id\": \"0.0.0.0\" }, \"default-route-distance\": { \"config\": { \"external-route-distance\": 200, \"internal-route-distance\": 200 }, \"state\": { \"external-route-distance\": 200, \"internal-route-distance\": 200 } }, \"graceful-restart\": { \"config\": { \"restart-time\": 0 }, \"state\": { \"restart-time\": 0 } }, \"route-selection-options\": { \"config\": {}, \"state\": {} }, \"state\": { \"as\": 4206000022, \"router-id\": \"4.4.4.4\" } }, \"openconfig-network-instance:neighbors\": { \"neighbor\": [ { \"afi-safis\": { \"afi-safi\": [ { \"afi-safi-name\": \"IPV4_UNICAST\", \"config\": { \"afi-safi-name\": \"IPV4_UNICAST\", \"enabled\": false }, \"graceful-restart\": { \"config\": { \"enabled\": false }, \"state\": { \"enabled\": false } }, \"state\": { \"afi-safi-name\": \"IPV4_UNICAST\", \"enabled\": false } }, { \"afi-safi-name\": \"IPV6_UNICAST\", \"config\": { \"afi-safi-name\": \"IPV6_UNICAST\", \"enabled\": false }, \"graceful-restart\": { \"config\": { \"enabled\": false }, \"state\": { \"enabled\": false } }, \"state\": { \"afi-safi-name\": \"IPV6_UNICAST\", \"enabled\": false } } ] }, \"config\": { \"auth-password\": \"\", \"description\": \"\", \"local-as\": 0, \"neighbor-address\": \"3.4.5.6\", \"peer-as\": 1, \"send-community\": \"NONE\" }, \"ebgp-multihop\": { \"config\": { \"multihop-ttl\": 0 }, \"state\": { \"multihop-ttl\": 0 } }, \"neighbor-address\": \"3.4.5.6\", \"route-reflector\": { \"config\": { \"route-reflector-client\": false }, \"state\": { \"route-reflector-client\": false } }, \"state\": { \"auth-password\": \"\", \"description\": \"\", \"local-as\": 0, \"peer-as\": 1, \"send-community\": \"NONE\" }, \"timers\": { \"config\": { \"hold-time\": \"180.0\", \"keepalive-interval\": \"60.0\" }, \"state\": { \"hold-time\": \"180.0\", \"keepalive-interval\": \"60.0\" } }, \"transport\": { \"config\": { \"passive-mode\": false }, \"state\": { \"passive-mode\": false } } }, { \"afi-safis\": { \"afi-safi\": [ { \"afi-safi-name\": \"IPV4_UNICAST\", \"config\": { \"afi-safi-name\": \"IPV4_UNICAST\", \"enabled\": false }, \"graceful-restart\": { \"config\": { \"enabled\": false }, \"state\": { \"enabled\": false } }, \"state\": { \"afi-safi-name\": \"IPV4_UNICAST\", \"enabled\": false } }, { \"afi-safi-name\": \"IPV6_UNICAST\", \"config\": { \"afi-safi-name\": \"IPV6_UNICAST\", \"enabled\": false }, \"graceful-restart\": { \"config\": { \"enabled\": false }, \"state\": { \"enabled\": false } }, \"state\": { \"afi-safi-name\": \"IPV6_UNICAST\", \"enabled\": false } } ] }, \"config\": { \"auth-password\": \"\", \"description\": \"\", \"local-as\": 0, \"neighbor-address\": \"20.1.1.1\", \"peer-as\": 65001, \"send-community\": \"NONE\" }, \"ebgp-multihop\": { \"config\": { \"multihop-ttl\": 0 }, \"state\": { \"multihop-ttl\": 0 } }, \"neighbor-address\": \"20.1.1.1\", \"route-reflector\": { \"config\": { \"route-reflector-client\": false }, \"state\": { \"route-reflector-client\": false } }, \"state\": { \"auth-password\": \"\", \"description\": \"\", \"local-as\": 0, \"peer-as\": 65001, \"send-community\": \"NONE\" }, \"timers\": { \"config\": { \"hold-time\": \"180.0\", \"keepalive-interval\": \"60.0\" }, \"state\": { \"hold-time\": \"180.0\", \"keepalive-interval\": \"60.0\" } }, \"transport\": { \"config\": { \"passive-mode\": false }, \"state\": { \"passive-mode\": false } } } ] } Get BGP neighbors gnmi -addr 10.83.13.139 -username admin get \\ '/network-instances/network-instance[name=default]/protocols/protocol[name=BGP]/bgp/neighbors' Reveal output /network-instances/network-instance[name=default]/protocols/protocol[identifier=BGP][name=BGP]/bgp/neighbors: { \"openconfig-network-instance:neighbor\": [ { \"afi-safis\": { \"afi-safi\": [ { \"afi-safi-name\": \"openconfig-bgp-types:IPV6_UNICAST\", \"config\": { \"afi-safi-name\": \"openconfig-bgp-types:IPV6_UNICAST\" }, \"state\": { \"afi-safi-name\": \"openconfig-bgp-types:IPV6_UNICAST\", \"prefixes\": { \"arista-bgp-augments:best-ecmp-paths\": 0, \"arista-bgp-augments:best-paths\": 0, \"installed\": 0, \"received\": 0, \"sent\": 0 } } }, { \"afi-safi-name\": \"openconfig-bgp-types:L2VPN_EVPN\", \"config\": { \"afi-safi-name\": \"openconfig-bgp-types:L2VPN_EVPN\" }, \"state\": { \"afi-safi-name\": \"openconfig-bgp-types:L2VPN_EVPN\", \"prefixes\": { \"arista-bgp-augments:best-ecmp-paths\": 0, \"arista-bgp-augments:best-paths\": 0, \"installed\": 0, \"received\": 0, \"sent\": 0 } } }, { \"afi-safi-name\": \"openconfig-bgp-types:IPV4_UNICAST\", \"config\": { \"afi-safi-name\": \"openconfig-bgp-types:IPV4_UNICAST\" }, \"state\": { \"afi-safi-name\": \"openconfig-bgp-types:IPV4_UNICAST\", \"prefixes\": { \"arista-bgp-augments:best-ecmp-paths\": 0, \"arista-bgp-augments:best-paths\": 0, \"installed\": 0, \"received\": 0, \"sent\": 0 } } } ] }, \"apply-policy\": { \"config\": { \"default-export-policy\": \"REJECT_ROUTE\", \"default-import-policy\": \"REJECT_ROUTE\" }, \"state\": { \"default-export-policy\": \"REJECT_ROUTE\", \"default-import-policy\": \"REJECT_ROUTE\" } }, \"as-path-options\": { \"config\": { \"replace-peer-as\": false }, \"state\": { \"replace-peer-as\": false } }, \"config\": { \"enabled\": true, \"neighbor-address\": \"172.168.14.2\", \"peer-as\": 65002, \"send-community\": \"NONE\" }, \"ebgp-multihop\": { \"config\": { \"enabled\": false, \"multihop-ttl\": 0 }, \"state\": { \"enabled\": false, \"multihop-ttl\": 0 } }, \"neighbor-address\": \"172.168.14.2\", \"state\": { \"enabled\": true, \"established-transitions\": \"2\", \"last-established\": \"1614170027122047488\", \"messages\": { \"received\": { \"UPDATE\": \"2\" }, \"sent\": { \"UPDATE\": \"2\" } }, \"neighbor-address\": \"172.168.14.2\", \"peer-as\": 65002, \"send-community\": \"NONE\", \"session-state\": \"ESTABLISHED\" }, \"transport\": { \"config\": { \"mtu-discovery\": true }, \"state\": { \"mtu-discovery\": true, \"remote-address\": \"172.168.14.2\", \"remote-port\": 0 } } } ] } Get all interface descriptions gnmi -addr 10.83.13.139:6030 -username admin -password arista get '/interfaces/interface/subinterfaces/subinterface/state/description' /interfaces/interface[name=Ethernet3]/subinterfaces/subinterface[index=0]/state/description: SRV01 /interfaces/interface[name=Ethernet1]/subinterfaces/subinterface[index=0]/state/description: DCI /interfaces/interface[name=Ethernet2]/subinterfaces/subinterface[index=0]/state/description: To Spines Get an interface's description ./gnmi -addr 10.81.117.100:6030 -username admin -password arista get \\ 'interfaces/interface[name=Ethernet1/1]/subinterfaces/subinterface/state/description' /interfaces/interface[name=Ethernet1/1]/subinterfaces/subinterface[index=0]/state/description: \"Tyrion\" Get the operational status of all interfaces gnmi -addr 10.83.13.139:6030 -username admin -password arista get \\ 'interfaces/interface/state/oper-status'` Get all states of an interface gnmi -addr 10.83.13.139:6030 -username cvpadmin -password arastra get \\ 'interfaces/interface[name=Ethernet24]/state/'` Reveal output /interfaces/interface[name=Ethernet24]/state: { \"openconfig-interfaces:admin-status\": \"UP\", \"openconfig-interfaces:counters\": { \"in-broadcast-pkts\": \"1\", \"in-discards\": \"0\", \"in-errors\": \"0\", \"in-fcs-errors\": \"0\", \"in-multicast-pkts\": \"70143\", \"in-octets\": \"570132503174\", \"in-unicast-pkts\": \"376128549\", \"out-broadcast-pkts\": \"2\", \"out-discards\": \"0\", \"out-errors\": \"0\", \"out-multicast-pkts\": \"169207\", \"out-octets\": \"569979193348\", \"out-unicast-pkts\": \"376049116\" }, \"openconfig-interfaces:description\": \"\", \"openconfig-interfaces:enabled\": true, \"openconfig-platform-port:hardware-port\": \"Port24\", \"openconfig-interfaces:ifindex\": 24, \"arista-intf-augments:inactive\": false, \"openconfig-interfaces:last-change\": \"1614001155863084032\", \"openconfig-interfaces:loopback-mode\": false, \"openconfig-interfaces:mtu\": 0, \"openconfig-interfaces:name\": \"Ethernet24\", \"openconfig-interfaces:oper-status\": \"UP\", \"openconfig-vlan:tpid\": \"openconfig-vlan-types:TPID_0X8100\", \"openconfig-interfaces:type\": \"iana-if-type:ethernetCsmacd\" } Get an interface's operational status gnmi -addr 10.83.13.139:6030 -username cvpadmin -password arastra get \\ 'interfaces/interface[name=Ethernet24]/state/oper-status' /interfaces/interface[name=Ethernet24]/state/oper-status: UP Get an interface's admin status gnmi -addr 10.83.13.139:6030 -username cvpadmin -password arastra get \\ 'interfaces/interface[name=Ethernet24]/state/admin-status'` /interfaces/interface[name=Ethernet24]/state/admin-status: UP Get the DOM metrics of all interfaces gnmi -addr 10.83.13.139:6030 -username cvpadmin -password arastra get \\ \"components/component/transceiver/physical-channels/channel/state/\" Get the DOM metrics of an interface gnmi -addr 10.83.13.139:6030 -username cvpadmin -password arastra get \\ \"components/component[name=Ethernet24 transceiver]/transceiver/physical-channels/channel/state/\" Reveal output /components/component[name=Ethernet24 transceiver]/transceiver/physical-channels/channel[index=0]/state: { \"openconfig-platform-transceiver:index\": 0, \"openconfig-platform-transceiver:input-power\": { \"instant\": \"-0.26\" }, \"openconfig-platform-transceiver:laser-bias-current\": { \"instant\": \"7.49\" }, \"openconfig-platform-transceiver:output-power\": { \"instant\": \"0.32\" } } Get per core CPU utilization gnmi -addr 10.83.13.139:6030 -username cvpadmin -password arastra get \\ 'components/component/cpu' Reveal output /components/component[name=CPU3]/cpu: { \"openconfig-platform-cpu:utilization\": { \"state\": { \"avg\": 18, \"instant\": 16, \"interval\": \"1000000000000\", \"max\": 28, \"max-time\": \"3230106984172745216\", \"min\": 13, \"min-time\": \"3230106514174602752\" } } } /components/component[name=CPU0]/cpu: { \"openconfig-platform-cpu:utilization\": { \"state\": { \"avg\": 17, \"instant\": 16, \"interval\": \"1000000000000\", \"max\": 25, \"max-time\": \"3230106564173730816\", \"min\": 12, \"min-time\": \"3230106394175068672\" } } } /components/component[name=CPU1]/cpu: { \"openconfig-platform-cpu:utilization\": { \"state\": { \"avg\": 18, \"instant\": 17, \"interval\": \"1000000000000\", \"max\": 27, \"max-time\": \"3230107464174793728\", \"min\": 13, \"min-time\": \"3230107334172570624\" } } } /components/component[name=CPU2]/cpu: { \"openconfig-platform-cpu:utilization\": { \"state\": { \"avg\": 17, \"instant\": 21, \"interval\": \"1000000000000\", \"max\": 24, \"max-time\": \"3230106924173756928\", \"min\": 11, \"min-time\": \"3230107394173572608\" } } } Get the available/utilized memory gnmi -addr 10.83.13.139:6030 -username cvpadmin -password arastra get \\ 'components/component/state/memory/'` /components/component[name=Chassis]/state/memory: { \"openconfig-platform:available\": \"8298774528\", \"openconfig-platform:utilized\": \"7706267648\" } Get the system environment temperatures gnmi -addr 10.83.13.139:6030 -username cvpadmin -password arastra get \\ 'components/component/state/temperature/instant' Reveal output /components/component[name=DomTemperatureSensor49]/state/temperature/instant: 30.49609375 /components/component[name=DomTemperatureSensor25]/state/temperature/instant: 24.69921875 /components/component[name=DomTemperatureSensor40]/state/temperature/instant: 25.5078125 /components/component[name=TempSensorP2/2]/state/temperature/instant: 0.0 /components/component[name=TempSensorP1/3]/state/temperature/instant: 40.0 /components/component[name=TempSensorP2/1]/state/temperature/instant: 0.0 /components/component[name=TempSensorP2/3]/state/temperature/instant: 0.0 /components/component[name=DomTemperatureSensor24]/state/temperature/instant: 24.5 /components/component[name=DomTemperatureSensor26]/state/temperature/instant: 23.73046875 /components/component[name=DomTemperatureSensor54]/state/temperature/instant: 27.26953125 /components/component[name=TempSensorP1/1]/state/temperature/instant: 34.0 /components/component[name=DomTemperatureSensor50]/state/temperature/instant: 27.453125 /components/component[name=TempSensorP1/2]/state/temperature/instant: 25.0 /components/component[name=TempSensor1]/state/temperature/instant: 45.84278576588521 /components/component[name=TempSensor15]/state/temperature/instant: 33.875 /components/component[name=TempSensor18]/state/temperature/instant: 44.625 /components/component[name=TempSensor16]/state/temperature/instant: 22.75 /components/component[name=TempSensor17]/state/temperature/instant: 37.0 /components/component[name=TempSensor14]/state/temperature/instant: 37.0 EOS Native paths To get EOS native paths, OCTA has to be enabled as mentioned in the configuration section. Performing GET/SUBSCRIBE actions using EOS native paths require changing the origin to eos_native . Commonly used paths MAC table: /Smash/bridging/status/smashFdbStatus ARP table: /Smash/arp/status/arpEntry Neighbor table: /Smash/arp/status/neighborEntry IPv4 RIB: /Smash/routing/status/route IPv6 RIB: /Smash/routing6/status/route IPv4 next-hop table: /Smash/routing/status/nexthop IPv6 next-hop table: /Smash/routing6/status/nexthop CPU info: /Kernel/proc/cpu Process statistics: /Kernel/proc/stat System info: /Kernel/sysinfo EOS version: /Eos/image Interface counters: /Smash/counters/ethIntf/<agent>/current/counter Values for <agent> are: 7500-family, 7280-family, 7020-family (Arad/Jericho ASICs): SandCounters 7300-family, 7250-family, 7050-family, 7010 products, 720-family (Trident ASICs): StrataCounters For 7060-family, 7260-family (Tomahawk): Strata-FixedSystem or StrataCounters from 4.22+ 7150-family products (Alta ASICs): FocalPointV2 7160-family products (Cavium/Xpliant ASICs): XpCounters 7170-family products (Barefoot ASIC): BfnCounters Get CPU utilization gnmi -addr 10.83.13.130:6030 -username admin get origin=eos_native \\ '/Kernel/proc/cpu/utilization/total' /Kernel/proc/cpu/utilization/total/nice: 38446 /Kernel/proc/cpu/utilization/total/system: 2347714 /Kernel/proc/cpu/utilization/total/idle: 247720286 /Kernel/proc/cpu/utilization/total/name: total /Kernel/proc/cpu/utilization/total/util: 7 /Kernel/proc/cpu/utilization/total/user: 16984784 Get transceiver DOM temperature gnmi -addr 10.83.13.130:6030 -username admin get origin=eos_native \\ 'Sysdb/environment/archer/temperature/status/system/DomTemperatureSensor32'` Reveal output /Sysdb/environment/archer/temperature/status/system/DomTemperatureSensor32/temperature: { \"value\": 32.5 } /Sysdb/environment/archer/temperature/status/system/DomTemperatureSensor32/maxTemperature: { \"value\": 34.88671875 } /Sysdb/environment/archer/temperature/status/system/DomTemperatureSensor32/maxTemperatureTime: 1564757444.339129 /Sysdb/environment/archer/temperature/status/system/DomTemperatureSensor32/name: DomTemperatureSensor32 /Sysdb/environment/archer/temperature/status/system/DomTemperatureSensor32/generationId: 0 /Sysdb/environment/archer/temperature/status/system/DomTemperatureSensor32/hwStatus: ok /Sysdb/environment/archer/temperature/status/system/DomTemperatureSensor32/alertRaised: false /Sysdb/environment/archer/temperature/status/system/DomTemperatureSensor32/alertRaisedCount: 0 /Sysdb/environment/archer/temperature/status/system/DomTemperatureSensor32/lastAlertRaisedTime: 1564194739.259879 Get connectivity monitor host stats gnmi -addr 10.83.13.139:6030 -username admin get origin=eos_native \\ /Sysdb/connectivityMonitor/status/hostStatus/' Reveal output /Sysdb/connectivityMonitor/status/hostStatus/wls100_default/key/hostName: wls100 /Sysdb/connectivityMonitor/status/hostStatus/wls100_default/key/vrfName: { \"value\": \"default\" } /Sysdb/connectivityMonitor/status/hostStatus/wls100_default/name: wls100_default /Sysdb/connectivityMonitor/status/hostStatus/wls100_default/defaultStats/packetLoss: 0 /Sysdb/connectivityMonitor/status/hostStatus/wls100_default/defaultStats/httpResponseTime: 0 /Sysdb/connectivityMonitor/status/hostStatus/wls100_default/defaultStats/interfaceName: /Sysdb/connectivityMonitor/status/hostStatus/wls100_default/defaultStats/jitter: 0 /Sysdb/connectivityMonitor/status/hostStatus/wls100_default/defaultStats/latency: 0 /Sysdb/connectivityMonitor/status/hostStatus/wls100_default/ipAddr: \"10.83.13.140\" /Sysdb/connectivityMonitor/status/hostStatus/ats323_management/key/hostName: ats323 /Sysdb/connectivityMonitor/status/hostStatus/ats323_management/key/vrfName: { \"value\": \"management\" } /Sysdb/connectivityMonitor/status/hostStatus/ats323_management/name: ats323_management /Sysdb/connectivityMonitor/status/hostStatus/ats323_management/ipAddr: \"10.83.13.138\" /Sysdb/connectivityMonitor/status/hostStatus/ats323_management/defaultStats/latency: 0.127 /Sysdb/connectivityMonitor/status/hostStatus/ats323_management/defaultStats/jitter: 0.033 /Sysdb/connectivityMonitor/status/hostStatus/ats323_management/defaultStats/packetLoss: 0 /Sysdb/connectivityMonitor/status/hostStatus/ats323_management/defaultStats/httpResponseTime: 21.860306 /Sysdb/connectivityMonitor/status/hostStatus/ats323_management/defaultStats/interfaceName: gNMI SET RPC Examples OpenConfig paths Configure BGP neighbor Configure neighbor address and peer AS gnmi -addr 10.83.13.139:6030 -username cvpadmin -password arastra update \\ '/network-instances/network-instance[name=default]/protocols/protocol[name=BGP]/bgp/neighbors/neighbor[neighbor-address=10.10.100.43]' '{\"config\": {\"neighbor-address\":\"10.10.100.43\", \"peer-as\": 123}}' Configure neighbor address, peer AS and send-community gnmi -addr 10.83.28.203:6030 -username arista -password arista update \\ '/network-instances/network-instance[name=default]/protocols/protocol[name=BGP]/bgp/neighbors/neighbor[neighbor-address=10.10.100.43]' '{\"config\": {\"neighbor-address\":\"10.10.100.43\", \"peer-as\": 123, \"enabled\": true, \"send-community\": \"EXTENDED\"}}' Create peer group gnmi -addr 10.83.28.203 -username arista -password arista update \\ '/network-instances/network-instance[name=default]/protocols/protocol[name=BGP]/bgp/peer-groups/peer-group[peer-group-name=XYZ]' '{\"config\": {\"peer-group-name\":\"XYZ\", \"local-as\": 114}}' Update the peer AS gnmi -addr 10.83.28.203:6030 -username arista -password arista update \\ '/network-instances/network-instance[name=default]/protocols/protocol[name=BGP]/bgp/neighbors/neighbor[neighbor-address=10.10.10.0]/config/peer-as' '110' gnmi -addr 10.83.28.203:6030 -username arista -password arista update \\ '/network-instances/network-instance[name=default]/protocols/protocol[name=BGP]/bgp/neighbors/neighbor[neighbor-address=10.10.10.0]' '{\"config\": {\"peer-as\": 110}}' Update the peer group gnmi -addr 10.83.28.203:6030 -username arista -password arista update \\ '/network-instances/network-instance[name=default]/protocols/protocol[name=BGP]/bgp/neighbors/neighbor[neighbor-address=10.10.100.43]/config/peer-group' 'XYZ' gnmi -addr 10.83.28.203:6030 -username arista -password arista update \\ '/network-instances/network-instance[name=default]/protocols/protocol[name=BGP]/bgp/neighbors/neighbor[neighbor-address=10.10.10.0]' '{\"config\": {\"peer-group\": \"XYZ\",\"peer-as\": 143}}' Update BGP config using json file gnmi -addr 10.83.28.203:6030 -username arista -password arista update \\ /network-instances/network-instance[name=default]/protocols/protocol[name=BGP]/bgp' Reveal output { \"neighbors\": { \"neighbor\": [ { \"config\": { \"enabled\": true, \"neighbor-address\": \"10.10.10.154\", \"peer-group\": \"XYZ\" }, \"neighbor-address\": \"10.10.10.154\" }, { \"config\": { \"enabled\": true, \"neighbor-address\": \"10.10.10.157\", \"peer-group\": \"XYZ\" }, \"neighbor-address\": \"10.10.10.157\" } ] }, \"peer-groups\": { \"peer-group\": [ { \"config\": { \"peer-as\": 65002, \"peer-group-name\": \"ABC\" }, \"peer-group-name\": \"ABC\" } ] } } Create an ACL gnmi -addr 10.83.28.203:6030 -username admin -password arista \\ update /acl/acl-sets acl2.json` cat acl2.json Reveal output { \"acl-set\": [ { \"config\": { \"name\": \"test\", \"type\": \"ACL_IPV4\" }, \"name\": \"test\", \"type\": \"ACL_IPV4\", \"acl-entries\": { \"acl-entry\": [ { \"sequence-id\": 10, \"actions\": { \"config\": { \"forwarding-action\": \"DROP\" } }, \"config\": { \"sequence-id\": 10 }, \"ipv4\": { \"config\": { \"destination-address\": \"1.2.3.4/12\", \"source-address\": \"0.0.0.0/0\" } } } ] } } ] } This creates ip access-list test 10 deny ip any 1.0.0.0/12 Shutdown an interface gnmi -addr 10.83.13.139:6030 -username arista -password arista update \\ '/interfaces/interface[name=Ethernet1]/config/enabled' 'false' Bring up an interface gnmi -addr 10.83.13.139:6030 -username arista -password arista update \\ '/interfaces/interface[name=Ethernet1]/config/enabled' 'true' gNMI SUBSCRIBE RPC Examples OpenConfig paths Subscribe to all BGP neighbor states gnmi -addr 10.83.28.203 -username arista -password arista subscribe \\ '/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/state' Subscribe to specific BGP neighbor state gnmi -addr 10.83.28.203 -username arista -password arista subscribe \\ '/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor[neighbor-address=10.10.10.5]/state' Subscribe with stream mode sample and interval gnmi -addr 10.83.13.214:6030 -username admin -password arista \\ -sample_interval 5s -stream_mode sample subscribe \\ '/network-instances/network-instance[name=Tenant_A_WEB_Zone]/protocols/protocol[identifier=BGP][name=BGP]/bgp/neighbors/neighbor[neighbor-address=10.255.251.1]/afi-safis/afi-safi[afi-safi-name=openconfig-bgp-types:IPV4_UNICAST]/state/prefixes/received'","title":"Arista gNMI client examples"},{"location":"examples/gnmi-clients/arista-gnmi/#gnmi-get-rpc-examples","text":"","title":"gNMI GET RPC Examples"},{"location":"examples/gnmi-clients/arista-gnmi/#openconfig-paths","text":"","title":"OpenConfig paths"},{"location":"examples/gnmi-clients/arista-gnmi/#get-all-information","text":"gnmi -addr 10.83.13.139:6030 -username admin -password arista get /","title":"Get all information"},{"location":"examples/gnmi-clients/arista-gnmi/#get-the-bgp-configuration-in-the-default-vrf","text":"gnmi -addr 172.28.160.219:6030 -username admin -password arista get \\ '/network-instances/network-instance[name=default]/protocols/protocol[identifier=BGP][name=BGP]/bgp'` Reveal output /network-instances/network-instance[name=default]/protocols/protocol[identifier=BGP][name=BGP]/bgp: { \"openconfig-network-instance:global\": { \"confederation\": { \"config\": { \"identifier\": 0 }, \"state\": {p \"identifier\": 0 } }, \"config\": { \"as\": 4206000022, \"router-id\": \"0.0.0.0\" }, \"default-route-distance\": { \"config\": { \"external-route-distance\": 200, \"internal-route-distance\": 200 }, \"state\": { \"external-route-distance\": 200, \"internal-route-distance\": 200 } }, \"graceful-restart\": { \"config\": { \"restart-time\": 0 }, \"state\": { \"restart-time\": 0 } }, \"route-selection-options\": { \"config\": {}, \"state\": {} }, \"state\": { \"as\": 4206000022, \"router-id\": \"4.4.4.4\" } }, \"openconfig-network-instance:neighbors\": { \"neighbor\": [ { \"afi-safis\": { \"afi-safi\": [ { \"afi-safi-name\": \"IPV4_UNICAST\", \"config\": { \"afi-safi-name\": \"IPV4_UNICAST\", \"enabled\": false }, \"graceful-restart\": { \"config\": { \"enabled\": false }, \"state\": { \"enabled\": false } }, \"state\": { \"afi-safi-name\": \"IPV4_UNICAST\", \"enabled\": false } }, { \"afi-safi-name\": \"IPV6_UNICAST\", \"config\": { \"afi-safi-name\": \"IPV6_UNICAST\", \"enabled\": false }, \"graceful-restart\": { \"config\": { \"enabled\": false }, \"state\": { \"enabled\": false } }, \"state\": { \"afi-safi-name\": \"IPV6_UNICAST\", \"enabled\": false } } ] }, \"config\": { \"auth-password\": \"\", \"description\": \"\", \"local-as\": 0, \"neighbor-address\": \"3.4.5.6\", \"peer-as\": 1, \"send-community\": \"NONE\" }, \"ebgp-multihop\": { \"config\": { \"multihop-ttl\": 0 }, \"state\": { \"multihop-ttl\": 0 } }, \"neighbor-address\": \"3.4.5.6\", \"route-reflector\": { \"config\": { \"route-reflector-client\": false }, \"state\": { \"route-reflector-client\": false } }, \"state\": { \"auth-password\": \"\", \"description\": \"\", \"local-as\": 0, \"peer-as\": 1, \"send-community\": \"NONE\" }, \"timers\": { \"config\": { \"hold-time\": \"180.0\", \"keepalive-interval\": \"60.0\" }, \"state\": { \"hold-time\": \"180.0\", \"keepalive-interval\": \"60.0\" } }, \"transport\": { \"config\": { \"passive-mode\": false }, \"state\": { \"passive-mode\": false } } }, { \"afi-safis\": { \"afi-safi\": [ { \"afi-safi-name\": \"IPV4_UNICAST\", \"config\": { \"afi-safi-name\": \"IPV4_UNICAST\", \"enabled\": false }, \"graceful-restart\": { \"config\": { \"enabled\": false }, \"state\": { \"enabled\": false } }, \"state\": { \"afi-safi-name\": \"IPV4_UNICAST\", \"enabled\": false } }, { \"afi-safi-name\": \"IPV6_UNICAST\", \"config\": { \"afi-safi-name\": \"IPV6_UNICAST\", \"enabled\": false }, \"graceful-restart\": { \"config\": { \"enabled\": false }, \"state\": { \"enabled\": false } }, \"state\": { \"afi-safi-name\": \"IPV6_UNICAST\", \"enabled\": false } } ] }, \"config\": { \"auth-password\": \"\", \"description\": \"\", \"local-as\": 0, \"neighbor-address\": \"20.1.1.1\", \"peer-as\": 65001, \"send-community\": \"NONE\" }, \"ebgp-multihop\": { \"config\": { \"multihop-ttl\": 0 }, \"state\": { \"multihop-ttl\": 0 } }, \"neighbor-address\": \"20.1.1.1\", \"route-reflector\": { \"config\": { \"route-reflector-client\": false }, \"state\": { \"route-reflector-client\": false } }, \"state\": { \"auth-password\": \"\", \"description\": \"\", \"local-as\": 0, \"peer-as\": 65001, \"send-community\": \"NONE\" }, \"timers\": { \"config\": { \"hold-time\": \"180.0\", \"keepalive-interval\": \"60.0\" }, \"state\": { \"hold-time\": \"180.0\", \"keepalive-interval\": \"60.0\" } }, \"transport\": { \"config\": { \"passive-mode\": false }, \"state\": { \"passive-mode\": false } } } ] }","title":"Get the BGP configuration in the default VRF"},{"location":"examples/gnmi-clients/arista-gnmi/#get-bgp-neighbors","text":"gnmi -addr 10.83.13.139 -username admin get \\ '/network-instances/network-instance[name=default]/protocols/protocol[name=BGP]/bgp/neighbors' Reveal output /network-instances/network-instance[name=default]/protocols/protocol[identifier=BGP][name=BGP]/bgp/neighbors: { \"openconfig-network-instance:neighbor\": [ { \"afi-safis\": { \"afi-safi\": [ { \"afi-safi-name\": \"openconfig-bgp-types:IPV6_UNICAST\", \"config\": { \"afi-safi-name\": \"openconfig-bgp-types:IPV6_UNICAST\" }, \"state\": { \"afi-safi-name\": \"openconfig-bgp-types:IPV6_UNICAST\", \"prefixes\": { \"arista-bgp-augments:best-ecmp-paths\": 0, \"arista-bgp-augments:best-paths\": 0, \"installed\": 0, \"received\": 0, \"sent\": 0 } } }, { \"afi-safi-name\": \"openconfig-bgp-types:L2VPN_EVPN\", \"config\": { \"afi-safi-name\": \"openconfig-bgp-types:L2VPN_EVPN\" }, \"state\": { \"afi-safi-name\": \"openconfig-bgp-types:L2VPN_EVPN\", \"prefixes\": { \"arista-bgp-augments:best-ecmp-paths\": 0, \"arista-bgp-augments:best-paths\": 0, \"installed\": 0, \"received\": 0, \"sent\": 0 } } }, { \"afi-safi-name\": \"openconfig-bgp-types:IPV4_UNICAST\", \"config\": { \"afi-safi-name\": \"openconfig-bgp-types:IPV4_UNICAST\" }, \"state\": { \"afi-safi-name\": \"openconfig-bgp-types:IPV4_UNICAST\", \"prefixes\": { \"arista-bgp-augments:best-ecmp-paths\": 0, \"arista-bgp-augments:best-paths\": 0, \"installed\": 0, \"received\": 0, \"sent\": 0 } } } ] }, \"apply-policy\": { \"config\": { \"default-export-policy\": \"REJECT_ROUTE\", \"default-import-policy\": \"REJECT_ROUTE\" }, \"state\": { \"default-export-policy\": \"REJECT_ROUTE\", \"default-import-policy\": \"REJECT_ROUTE\" } }, \"as-path-options\": { \"config\": { \"replace-peer-as\": false }, \"state\": { \"replace-peer-as\": false } }, \"config\": { \"enabled\": true, \"neighbor-address\": \"172.168.14.2\", \"peer-as\": 65002, \"send-community\": \"NONE\" }, \"ebgp-multihop\": { \"config\": { \"enabled\": false, \"multihop-ttl\": 0 }, \"state\": { \"enabled\": false, \"multihop-ttl\": 0 } }, \"neighbor-address\": \"172.168.14.2\", \"state\": { \"enabled\": true, \"established-transitions\": \"2\", \"last-established\": \"1614170027122047488\", \"messages\": { \"received\": { \"UPDATE\": \"2\" }, \"sent\": { \"UPDATE\": \"2\" } }, \"neighbor-address\": \"172.168.14.2\", \"peer-as\": 65002, \"send-community\": \"NONE\", \"session-state\": \"ESTABLISHED\" }, \"transport\": { \"config\": { \"mtu-discovery\": true }, \"state\": { \"mtu-discovery\": true, \"remote-address\": \"172.168.14.2\", \"remote-port\": 0 } } } ] }","title":"Get BGP neighbors"},{"location":"examples/gnmi-clients/arista-gnmi/#get-all-interface-descriptions","text":"gnmi -addr 10.83.13.139:6030 -username admin -password arista get '/interfaces/interface/subinterfaces/subinterface/state/description' /interfaces/interface[name=Ethernet3]/subinterfaces/subinterface[index=0]/state/description: SRV01 /interfaces/interface[name=Ethernet1]/subinterfaces/subinterface[index=0]/state/description: DCI /interfaces/interface[name=Ethernet2]/subinterfaces/subinterface[index=0]/state/description: To Spines","title":"Get all interface descriptions"},{"location":"examples/gnmi-clients/arista-gnmi/#get-an-interfaces-description","text":"./gnmi -addr 10.81.117.100:6030 -username admin -password arista get \\ 'interfaces/interface[name=Ethernet1/1]/subinterfaces/subinterface/state/description' /interfaces/interface[name=Ethernet1/1]/subinterfaces/subinterface[index=0]/state/description: \"Tyrion\"","title":"Get an interface's description"},{"location":"examples/gnmi-clients/arista-gnmi/#get-the-operational-status-of-all-interfaces","text":"gnmi -addr 10.83.13.139:6030 -username admin -password arista get \\ 'interfaces/interface/state/oper-status'`","title":"Get the operational status of all interfaces"},{"location":"examples/gnmi-clients/arista-gnmi/#get-all-states-of-an-interface","text":"gnmi -addr 10.83.13.139:6030 -username cvpadmin -password arastra get \\ 'interfaces/interface[name=Ethernet24]/state/'` Reveal output /interfaces/interface[name=Ethernet24]/state: { \"openconfig-interfaces:admin-status\": \"UP\", \"openconfig-interfaces:counters\": { \"in-broadcast-pkts\": \"1\", \"in-discards\": \"0\", \"in-errors\": \"0\", \"in-fcs-errors\": \"0\", \"in-multicast-pkts\": \"70143\", \"in-octets\": \"570132503174\", \"in-unicast-pkts\": \"376128549\", \"out-broadcast-pkts\": \"2\", \"out-discards\": \"0\", \"out-errors\": \"0\", \"out-multicast-pkts\": \"169207\", \"out-octets\": \"569979193348\", \"out-unicast-pkts\": \"376049116\" }, \"openconfig-interfaces:description\": \"\", \"openconfig-interfaces:enabled\": true, \"openconfig-platform-port:hardware-port\": \"Port24\", \"openconfig-interfaces:ifindex\": 24, \"arista-intf-augments:inactive\": false, \"openconfig-interfaces:last-change\": \"1614001155863084032\", \"openconfig-interfaces:loopback-mode\": false, \"openconfig-interfaces:mtu\": 0, \"openconfig-interfaces:name\": \"Ethernet24\", \"openconfig-interfaces:oper-status\": \"UP\", \"openconfig-vlan:tpid\": \"openconfig-vlan-types:TPID_0X8100\", \"openconfig-interfaces:type\": \"iana-if-type:ethernetCsmacd\" }","title":"Get all states of an interface"},{"location":"examples/gnmi-clients/arista-gnmi/#get-an-interfaces-operational-status","text":"gnmi -addr 10.83.13.139:6030 -username cvpadmin -password arastra get \\ 'interfaces/interface[name=Ethernet24]/state/oper-status' /interfaces/interface[name=Ethernet24]/state/oper-status: UP","title":"Get an interface's operational status"},{"location":"examples/gnmi-clients/arista-gnmi/#get-an-interfaces-admin-status","text":"gnmi -addr 10.83.13.139:6030 -username cvpadmin -password arastra get \\ 'interfaces/interface[name=Ethernet24]/state/admin-status'` /interfaces/interface[name=Ethernet24]/state/admin-status: UP","title":"Get an interface's admin status"},{"location":"examples/gnmi-clients/arista-gnmi/#get-the-dom-metrics-of-all-interfaces","text":"gnmi -addr 10.83.13.139:6030 -username cvpadmin -password arastra get \\ \"components/component/transceiver/physical-channels/channel/state/\"","title":"Get the DOM metrics of all interfaces"},{"location":"examples/gnmi-clients/arista-gnmi/#get-the-dom-metrics-of-an-interface","text":"gnmi -addr 10.83.13.139:6030 -username cvpadmin -password arastra get \\ \"components/component[name=Ethernet24 transceiver]/transceiver/physical-channels/channel/state/\" Reveal output /components/component[name=Ethernet24 transceiver]/transceiver/physical-channels/channel[index=0]/state: { \"openconfig-platform-transceiver:index\": 0, \"openconfig-platform-transceiver:input-power\": { \"instant\": \"-0.26\" }, \"openconfig-platform-transceiver:laser-bias-current\": { \"instant\": \"7.49\" }, \"openconfig-platform-transceiver:output-power\": { \"instant\": \"0.32\" } }","title":"Get the DOM metrics of an interface"},{"location":"examples/gnmi-clients/arista-gnmi/#get-per-core-cpu-utilization","text":"gnmi -addr 10.83.13.139:6030 -username cvpadmin -password arastra get \\ 'components/component/cpu' Reveal output /components/component[name=CPU3]/cpu: { \"openconfig-platform-cpu:utilization\": { \"state\": { \"avg\": 18, \"instant\": 16, \"interval\": \"1000000000000\", \"max\": 28, \"max-time\": \"3230106984172745216\", \"min\": 13, \"min-time\": \"3230106514174602752\" } } } /components/component[name=CPU0]/cpu: { \"openconfig-platform-cpu:utilization\": { \"state\": { \"avg\": 17, \"instant\": 16, \"interval\": \"1000000000000\", \"max\": 25, \"max-time\": \"3230106564173730816\", \"min\": 12, \"min-time\": \"3230106394175068672\" } } } /components/component[name=CPU1]/cpu: { \"openconfig-platform-cpu:utilization\": { \"state\": { \"avg\": 18, \"instant\": 17, \"interval\": \"1000000000000\", \"max\": 27, \"max-time\": \"3230107464174793728\", \"min\": 13, \"min-time\": \"3230107334172570624\" } } } /components/component[name=CPU2]/cpu: { \"openconfig-platform-cpu:utilization\": { \"state\": { \"avg\": 17, \"instant\": 21, \"interval\": \"1000000000000\", \"max\": 24, \"max-time\": \"3230106924173756928\", \"min\": 11, \"min-time\": \"3230107394173572608\" } } }","title":"Get per core CPU utilization"},{"location":"examples/gnmi-clients/arista-gnmi/#get-the-availableutilized-memory","text":"gnmi -addr 10.83.13.139:6030 -username cvpadmin -password arastra get \\ 'components/component/state/memory/'` /components/component[name=Chassis]/state/memory: { \"openconfig-platform:available\": \"8298774528\", \"openconfig-platform:utilized\": \"7706267648\" }","title":"Get the available/utilized memory"},{"location":"examples/gnmi-clients/arista-gnmi/#get-the-system-environment-temperatures","text":"gnmi -addr 10.83.13.139:6030 -username cvpadmin -password arastra get \\ 'components/component/state/temperature/instant' Reveal output /components/component[name=DomTemperatureSensor49]/state/temperature/instant: 30.49609375 /components/component[name=DomTemperatureSensor25]/state/temperature/instant: 24.69921875 /components/component[name=DomTemperatureSensor40]/state/temperature/instant: 25.5078125 /components/component[name=TempSensorP2/2]/state/temperature/instant: 0.0 /components/component[name=TempSensorP1/3]/state/temperature/instant: 40.0 /components/component[name=TempSensorP2/1]/state/temperature/instant: 0.0 /components/component[name=TempSensorP2/3]/state/temperature/instant: 0.0 /components/component[name=DomTemperatureSensor24]/state/temperature/instant: 24.5 /components/component[name=DomTemperatureSensor26]/state/temperature/instant: 23.73046875 /components/component[name=DomTemperatureSensor54]/state/temperature/instant: 27.26953125 /components/component[name=TempSensorP1/1]/state/temperature/instant: 34.0 /components/component[name=DomTemperatureSensor50]/state/temperature/instant: 27.453125 /components/component[name=TempSensorP1/2]/state/temperature/instant: 25.0 /components/component[name=TempSensor1]/state/temperature/instant: 45.84278576588521 /components/component[name=TempSensor15]/state/temperature/instant: 33.875 /components/component[name=TempSensor18]/state/temperature/instant: 44.625 /components/component[name=TempSensor16]/state/temperature/instant: 22.75 /components/component[name=TempSensor17]/state/temperature/instant: 37.0 /components/component[name=TempSensor14]/state/temperature/instant: 37.0","title":"Get the system environment temperatures"},{"location":"examples/gnmi-clients/arista-gnmi/#eos-native-paths","text":"To get EOS native paths, OCTA has to be enabled as mentioned in the configuration section. Performing GET/SUBSCRIBE actions using EOS native paths require changing the origin to eos_native .","title":"EOS Native paths"},{"location":"examples/gnmi-clients/arista-gnmi/#commonly-used-paths","text":"MAC table: /Smash/bridging/status/smashFdbStatus ARP table: /Smash/arp/status/arpEntry Neighbor table: /Smash/arp/status/neighborEntry IPv4 RIB: /Smash/routing/status/route IPv6 RIB: /Smash/routing6/status/route IPv4 next-hop table: /Smash/routing/status/nexthop IPv6 next-hop table: /Smash/routing6/status/nexthop CPU info: /Kernel/proc/cpu Process statistics: /Kernel/proc/stat System info: /Kernel/sysinfo EOS version: /Eos/image Interface counters: /Smash/counters/ethIntf/<agent>/current/counter Values for <agent> are: 7500-family, 7280-family, 7020-family (Arad/Jericho ASICs): SandCounters 7300-family, 7250-family, 7050-family, 7010 products, 720-family (Trident ASICs): StrataCounters For 7060-family, 7260-family (Tomahawk): Strata-FixedSystem or StrataCounters from 4.22+ 7150-family products (Alta ASICs): FocalPointV2 7160-family products (Cavium/Xpliant ASICs): XpCounters 7170-family products (Barefoot ASIC): BfnCounters","title":"Commonly used paths"},{"location":"examples/gnmi-clients/arista-gnmi/#get-cpu-utilization","text":"gnmi -addr 10.83.13.130:6030 -username admin get origin=eos_native \\ '/Kernel/proc/cpu/utilization/total' /Kernel/proc/cpu/utilization/total/nice: 38446 /Kernel/proc/cpu/utilization/total/system: 2347714 /Kernel/proc/cpu/utilization/total/idle: 247720286 /Kernel/proc/cpu/utilization/total/name: total /Kernel/proc/cpu/utilization/total/util: 7 /Kernel/proc/cpu/utilization/total/user: 16984784","title":"Get CPU utilization"},{"location":"examples/gnmi-clients/arista-gnmi/#get-transceiver-dom-temperature","text":"gnmi -addr 10.83.13.130:6030 -username admin get origin=eos_native \\ 'Sysdb/environment/archer/temperature/status/system/DomTemperatureSensor32'` Reveal output /Sysdb/environment/archer/temperature/status/system/DomTemperatureSensor32/temperature: { \"value\": 32.5 } /Sysdb/environment/archer/temperature/status/system/DomTemperatureSensor32/maxTemperature: { \"value\": 34.88671875 } /Sysdb/environment/archer/temperature/status/system/DomTemperatureSensor32/maxTemperatureTime: 1564757444.339129 /Sysdb/environment/archer/temperature/status/system/DomTemperatureSensor32/name: DomTemperatureSensor32 /Sysdb/environment/archer/temperature/status/system/DomTemperatureSensor32/generationId: 0 /Sysdb/environment/archer/temperature/status/system/DomTemperatureSensor32/hwStatus: ok /Sysdb/environment/archer/temperature/status/system/DomTemperatureSensor32/alertRaised: false /Sysdb/environment/archer/temperature/status/system/DomTemperatureSensor32/alertRaisedCount: 0 /Sysdb/environment/archer/temperature/status/system/DomTemperatureSensor32/lastAlertRaisedTime: 1564194739.259879","title":"Get transceiver DOM temperature"},{"location":"examples/gnmi-clients/arista-gnmi/#get-connectivity-monitor-host-stats","text":"gnmi -addr 10.83.13.139:6030 -username admin get origin=eos_native \\ /Sysdb/connectivityMonitor/status/hostStatus/' Reveal output /Sysdb/connectivityMonitor/status/hostStatus/wls100_default/key/hostName: wls100 /Sysdb/connectivityMonitor/status/hostStatus/wls100_default/key/vrfName: { \"value\": \"default\" } /Sysdb/connectivityMonitor/status/hostStatus/wls100_default/name: wls100_default /Sysdb/connectivityMonitor/status/hostStatus/wls100_default/defaultStats/packetLoss: 0 /Sysdb/connectivityMonitor/status/hostStatus/wls100_default/defaultStats/httpResponseTime: 0 /Sysdb/connectivityMonitor/status/hostStatus/wls100_default/defaultStats/interfaceName: /Sysdb/connectivityMonitor/status/hostStatus/wls100_default/defaultStats/jitter: 0 /Sysdb/connectivityMonitor/status/hostStatus/wls100_default/defaultStats/latency: 0 /Sysdb/connectivityMonitor/status/hostStatus/wls100_default/ipAddr: \"10.83.13.140\" /Sysdb/connectivityMonitor/status/hostStatus/ats323_management/key/hostName: ats323 /Sysdb/connectivityMonitor/status/hostStatus/ats323_management/key/vrfName: { \"value\": \"management\" } /Sysdb/connectivityMonitor/status/hostStatus/ats323_management/name: ats323_management /Sysdb/connectivityMonitor/status/hostStatus/ats323_management/ipAddr: \"10.83.13.138\" /Sysdb/connectivityMonitor/status/hostStatus/ats323_management/defaultStats/latency: 0.127 /Sysdb/connectivityMonitor/status/hostStatus/ats323_management/defaultStats/jitter: 0.033 /Sysdb/connectivityMonitor/status/hostStatus/ats323_management/defaultStats/packetLoss: 0 /Sysdb/connectivityMonitor/status/hostStatus/ats323_management/defaultStats/httpResponseTime: 21.860306 /Sysdb/connectivityMonitor/status/hostStatus/ats323_management/defaultStats/interfaceName:","title":"Get connectivity monitor host stats"},{"location":"examples/gnmi-clients/arista-gnmi/#gnmi-set-rpc-examples","text":"","title":"gNMI SET RPC Examples"},{"location":"examples/gnmi-clients/arista-gnmi/#openconfig-paths_1","text":"","title":"OpenConfig paths"},{"location":"examples/gnmi-clients/arista-gnmi/#configure-bgp-neighbor","text":"","title":"Configure BGP neighbor"},{"location":"examples/gnmi-clients/arista-gnmi/#configure-neighbor-address-and-peer-as","text":"gnmi -addr 10.83.13.139:6030 -username cvpadmin -password arastra update \\ '/network-instances/network-instance[name=default]/protocols/protocol[name=BGP]/bgp/neighbors/neighbor[neighbor-address=10.10.100.43]' '{\"config\": {\"neighbor-address\":\"10.10.100.43\", \"peer-as\": 123}}'","title":"Configure neighbor address and peer AS"},{"location":"examples/gnmi-clients/arista-gnmi/#configure-neighbor-address-peer-as-and-send-community","text":"gnmi -addr 10.83.28.203:6030 -username arista -password arista update \\ '/network-instances/network-instance[name=default]/protocols/protocol[name=BGP]/bgp/neighbors/neighbor[neighbor-address=10.10.100.43]' '{\"config\": {\"neighbor-address\":\"10.10.100.43\", \"peer-as\": 123, \"enabled\": true, \"send-community\": \"EXTENDED\"}}'","title":"Configure neighbor address, peer AS and send-community"},{"location":"examples/gnmi-clients/arista-gnmi/#create-peer-group","text":"gnmi -addr 10.83.28.203 -username arista -password arista update \\ '/network-instances/network-instance[name=default]/protocols/protocol[name=BGP]/bgp/peer-groups/peer-group[peer-group-name=XYZ]' '{\"config\": {\"peer-group-name\":\"XYZ\", \"local-as\": 114}}'","title":"Create peer group"},{"location":"examples/gnmi-clients/arista-gnmi/#update-the-peer-as","text":"gnmi -addr 10.83.28.203:6030 -username arista -password arista update \\ '/network-instances/network-instance[name=default]/protocols/protocol[name=BGP]/bgp/neighbors/neighbor[neighbor-address=10.10.10.0]/config/peer-as' '110' gnmi -addr 10.83.28.203:6030 -username arista -password arista update \\ '/network-instances/network-instance[name=default]/protocols/protocol[name=BGP]/bgp/neighbors/neighbor[neighbor-address=10.10.10.0]' '{\"config\": {\"peer-as\": 110}}'","title":"Update the peer AS"},{"location":"examples/gnmi-clients/arista-gnmi/#update-the-peer-group","text":"gnmi -addr 10.83.28.203:6030 -username arista -password arista update \\ '/network-instances/network-instance[name=default]/protocols/protocol[name=BGP]/bgp/neighbors/neighbor[neighbor-address=10.10.100.43]/config/peer-group' 'XYZ' gnmi -addr 10.83.28.203:6030 -username arista -password arista update \\ '/network-instances/network-instance[name=default]/protocols/protocol[name=BGP]/bgp/neighbors/neighbor[neighbor-address=10.10.10.0]' '{\"config\": {\"peer-group\": \"XYZ\",\"peer-as\": 143}}'","title":"Update the peer group"},{"location":"examples/gnmi-clients/arista-gnmi/#update-bgp-config-using-json-file","text":"gnmi -addr 10.83.28.203:6030 -username arista -password arista update \\ /network-instances/network-instance[name=default]/protocols/protocol[name=BGP]/bgp' Reveal output { \"neighbors\": { \"neighbor\": [ { \"config\": { \"enabled\": true, \"neighbor-address\": \"10.10.10.154\", \"peer-group\": \"XYZ\" }, \"neighbor-address\": \"10.10.10.154\" }, { \"config\": { \"enabled\": true, \"neighbor-address\": \"10.10.10.157\", \"peer-group\": \"XYZ\" }, \"neighbor-address\": \"10.10.10.157\" } ] }, \"peer-groups\": { \"peer-group\": [ { \"config\": { \"peer-as\": 65002, \"peer-group-name\": \"ABC\" }, \"peer-group-name\": \"ABC\" } ] } }","title":"Update BGP config using json file"},{"location":"examples/gnmi-clients/arista-gnmi/#create-an-acl","text":"gnmi -addr 10.83.28.203:6030 -username admin -password arista \\ update /acl/acl-sets acl2.json` cat acl2.json Reveal output { \"acl-set\": [ { \"config\": { \"name\": \"test\", \"type\": \"ACL_IPV4\" }, \"name\": \"test\", \"type\": \"ACL_IPV4\", \"acl-entries\": { \"acl-entry\": [ { \"sequence-id\": 10, \"actions\": { \"config\": { \"forwarding-action\": \"DROP\" } }, \"config\": { \"sequence-id\": 10 }, \"ipv4\": { \"config\": { \"destination-address\": \"1.2.3.4/12\", \"source-address\": \"0.0.0.0/0\" } } } ] } } ] } This creates ip access-list test 10 deny ip any 1.0.0.0/12","title":"Create an ACL"},{"location":"examples/gnmi-clients/arista-gnmi/#shutdown-an-interface","text":"gnmi -addr 10.83.13.139:6030 -username arista -password arista update \\ '/interfaces/interface[name=Ethernet1]/config/enabled' 'false'","title":"Shutdown an interface"},{"location":"examples/gnmi-clients/arista-gnmi/#bring-up-an-interface","text":"gnmi -addr 10.83.13.139:6030 -username arista -password arista update \\ '/interfaces/interface[name=Ethernet1]/config/enabled' 'true'","title":"Bring up an interface"},{"location":"examples/gnmi-clients/arista-gnmi/#gnmi-subscribe-rpc-examples","text":"","title":"gNMI SUBSCRIBE RPC Examples"},{"location":"examples/gnmi-clients/arista-gnmi/#openconfig-paths_2","text":"","title":"OpenConfig paths"},{"location":"examples/gnmi-clients/arista-gnmi/#subscribe-to-all-bgp-neighbor-states","text":"gnmi -addr 10.83.28.203 -username arista -password arista subscribe \\ '/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/state'","title":"Subscribe to all BGP neighbor states"},{"location":"examples/gnmi-clients/arista-gnmi/#subscribe-to-specific-bgp-neighbor-state","text":"gnmi -addr 10.83.28.203 -username arista -password arista subscribe \\ '/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor[neighbor-address=10.10.10.5]/state'","title":"Subscribe to specific BGP neighbor state"},{"location":"examples/gnmi-clients/arista-gnmi/#subscribe-with-stream-mode-sample-and-interval","text":"gnmi -addr 10.83.13.214:6030 -username admin -password arista \\ -sample_interval 5s -stream_mode sample subscribe \\ '/network-instances/network-instance[name=Tenant_A_WEB_Zone]/protocols/protocol[identifier=BGP][name=BGP]/bgp/neighbors/neighbor[neighbor-address=10.255.251.1]/afi-safis/afi-safi[afi-safi-name=openconfig-bgp-types:IPV4_UNICAST]/state/prefixes/received'","title":"Subscribe with stream mode sample and interval"},{"location":"examples/gnmi-clients/gnmic/","text":"Overview Download && install gnmic Device config Capabilities [openconfig-paths] Get Subscribe Eos Native paths Cli origin Misc Smash paths overview The following examples are used to find openconfig paths within Arista EOS using the gNMIC binary . There will be some commands which will specify one liners which will have the address of the gNMI target and some commands which will use the .gnmic.yaml file which will have the target information inside declared. All outputs will be redirected to the outputs file with the .json extension so they are easier to view within a text editor. Download && install gnmic curl -sL https://github.com/karimra/gnmic/raw/master/install.sh | sudo bash gnmi_stuff$ gnmic version version : 0.7.0 commit : dcbe8d3 date : 2021-01-28T01:58:29Z gitURL : https://github.com/karimra/gnmic docs : https://gnmic.kmrd.dev Device config management api gnmi transport grpc default provider eos-native ceos3# show management api gnmi Octa: enabled Enabled: Yes Server: running on port 6030 SSL Profile: none QoS DSCP: none Authorization Required:No gnmic -a 127.0.0.1:6030 -u admin -p admin --insecure capabilities \\ >> outputs/capabilities.json Get openconfig paths gnmic -a 127.0.0.1:6030 -u admin -p admin --insecure get \\ --path / >> outputs/everything.json gnmic -a 127.0.0.1:6030 -u admin -p admin --insecure get --path \\ /network-instances/network-instance >> outputs/network-instances.json gnmic -a 127.0.0.1:6030 -u admin -p admin --insecure get --path \\ /network-instances/network-instance[name=default]/protocols/protocol[name=BGP]\\ >> outputs/bgp.json Subscribe openconfig paths gnmic -a 127.0.0.1:6030 -u admin -p admin --insecure subscribe --path \\ \"/interfaces/interface/state/counters\" >> outputs/interface_state.json eos_native paths gnmic -a 127.0.0.1:6030 -u admin -p admin --insecure get --path \\ eos_native:/Sysdb/hardware/archer/xcvr/status >> outputs/doms.json gnmic -a 127.0.0.1:6030 -u admin -p admin --insecure get \\ --path eos_native:/Eos/image >> outputs/eos_image.json Cli origin gnmic -a 127.0.0.1:6030 -u admin -p admin --insecure get \\ --path \"cli:/show running-config\" >> outputs/outputs.json gnmic -a 127.0.0.1:6030 -u admin -p admin --insecure get \\ --path \"cli:/show ip route summary\" \\ | jq '.[0].updates[0].values.\"show ip route summary\".totalRoutes' Misc gnmic -a 127.0.0.1:6030 -u admin -p admin --insecure get \\ --path \".../state/...\" >> outputs/states.json gnmic -a 127.0.0.1:6030 -u admin -p admin --insecure get \\ --path \".../config/...\" >> outputs/configs.json Smash paths gnmic -a 127.0.0.1:6030 -u admin -p admin --insecure get \\ --path eos_native:/Smash >> outputs/smashes.json","title":"gNMIC examples"},{"location":"examples/gnmi-clients/gnmic/#overview","text":"The following examples are used to find openconfig paths within Arista EOS using the gNMIC binary . There will be some commands which will specify one liners which will have the address of the gNMI target and some commands which will use the .gnmic.yaml file which will have the target information inside declared. All outputs will be redirected to the outputs file with the .json extension so they are easier to view within a text editor.","title":"overview"},{"location":"examples/gnmi-clients/gnmic/#download-install-gnmic","text":"curl -sL https://github.com/karimra/gnmic/raw/master/install.sh | sudo bash gnmi_stuff$ gnmic version version : 0.7.0 commit : dcbe8d3 date : 2021-01-28T01:58:29Z gitURL : https://github.com/karimra/gnmic docs : https://gnmic.kmrd.dev","title":"Download &amp;&amp; install gnmic"},{"location":"examples/gnmi-clients/gnmic/#device-config","text":"management api gnmi transport grpc default provider eos-native ceos3# show management api gnmi Octa: enabled Enabled: Yes Server: running on port 6030 SSL Profile: none QoS DSCP: none Authorization Required:No gnmic -a 127.0.0.1:6030 -u admin -p admin --insecure capabilities \\ >> outputs/capabilities.json","title":"Device config"},{"location":"examples/gnmi-clients/gnmic/#get-openconfig-paths","text":"gnmic -a 127.0.0.1:6030 -u admin -p admin --insecure get \\ --path / >> outputs/everything.json gnmic -a 127.0.0.1:6030 -u admin -p admin --insecure get --path \\ /network-instances/network-instance >> outputs/network-instances.json gnmic -a 127.0.0.1:6030 -u admin -p admin --insecure get --path \\ /network-instances/network-instance[name=default]/protocols/protocol[name=BGP]\\ >> outputs/bgp.json","title":"Get openconfig paths"},{"location":"examples/gnmi-clients/gnmic/#subscribe-openconfig-paths","text":"gnmic -a 127.0.0.1:6030 -u admin -p admin --insecure subscribe --path \\ \"/interfaces/interface/state/counters\" >> outputs/interface_state.json","title":"Subscribe openconfig paths"},{"location":"examples/gnmi-clients/gnmic/#eos_native-paths","text":"gnmic -a 127.0.0.1:6030 -u admin -p admin --insecure get --path \\ eos_native:/Sysdb/hardware/archer/xcvr/status >> outputs/doms.json gnmic -a 127.0.0.1:6030 -u admin -p admin --insecure get \\ --path eos_native:/Eos/image >> outputs/eos_image.json","title":"eos_native paths"},{"location":"examples/gnmi-clients/gnmic/#cli-origin","text":"gnmic -a 127.0.0.1:6030 -u admin -p admin --insecure get \\ --path \"cli:/show running-config\" >> outputs/outputs.json gnmic -a 127.0.0.1:6030 -u admin -p admin --insecure get \\ --path \"cli:/show ip route summary\" \\ | jq '.[0].updates[0].values.\"show ip route summary\".totalRoutes'","title":"Cli origin"},{"location":"examples/gnmi-clients/gnmic/#misc","text":"gnmic -a 127.0.0.1:6030 -u admin -p admin --insecure get \\ --path \".../state/...\" >> outputs/states.json gnmic -a 127.0.0.1:6030 -u admin -p admin --insecure get \\ --path \".../config/...\" >> outputs/configs.json","title":"Misc"},{"location":"examples/gnmi-clients/gnmic/#smash-paths","text":"gnmic -a 127.0.0.1:6030 -u admin -p admin --insecure get \\ --path eos_native:/Smash >> outputs/smashes.json","title":"Smash paths"},{"location":"examples/gnmi-gateway/","text":"Overview EOS configuration Start gNMI gateway Query gNMI gateway Overview gNMI gateway is a opensource project created by netflix. The idea of gNMI gateway is the gateway sits as a gateway or a proxy for multiple gNMI targets which it then manages. A gNMI client will then speak to the gNMI service(gNMI gateway) and use a gNMI target which the client will then request the path. gNMI gateway documentation can be found here NANOG demo can also be found here In this demo we will start the gNMI gateway binary and use gNMIC to then stream to a target which is managed by gNMI gateway. Please make adjustments to the targets.json file to match your own network. The demo is structured in a few different files all which have their own function. \u251c\u2500\u2500 gnmi-gateway \u251c\u2500\u2500 index.md \u251c\u2500\u2500 server.crt \u251c\u2500\u2500 server.key \u2514\u2500\u2500 targets.json gnmi-gateway - this is the binary to activate gNMI gateway server.crt / server.key - the cert for gNMI gateway targets.json - This is the file where you specify the targets gNMI-gateway supports hot reloading of the files. So if changes are made within targets.json it will reload automatically with new targets and or new paths. EOS configuration management api gnmi transport grpc default ssl profile SELFSIGNED provider eos-native ! management security ssl profile SELFSIGNED certificate cvp.crt key cvp.key ! security pki certificate generate self-signed cvp.crt key cvp.key generate rsa 2048 validity 30000 parameters common-name cvp The configuration stated here will add a self signed cert to the device and start the gNMI service with the cert. Start gNMI gateway ./gnmi-gateway -EnableGNMIServer -ServerTLSCert=server.crt \\ -ServerTLSKey=server.key -TargetLoaders=json -TargetJSONFile=targets.json ./gnmi-gateway -EnableGNMIServer -ServerTLSCert=server.crt \\ -ServerTLSKey=server.key -TargetLoaders=json -TargetJSONFile=targets.json {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Starting GNMI Gateway.\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Clustering is NOT enabled. No locking or cluster coordination will happen.\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Starting connection manager.\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Starting gNMI server on 0.0.0.0:9339.\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Connection manager received a target control message: 3 inserts 0 removes\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Initializing target DC2-SP02 ([10.20.30.22:6030]) map[NoTLS:yes].\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Initializing target DC2-LEAF1A ([10.20.30.5:6030]) map[NoTLS:yes].\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Target DC2-SP02: Connecting\"} {\"level\":\"warn\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"DEPRECATED: The 'NoTLS' target flag has been deprecated and will be removed in a future release. Please use 'NoTLSVerify' instead.\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Target DC2-SP02: Subscribing\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Initializing target DC2-LF70 ([10.20.30.70:6030]) map[NoTLS:yes].\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Target DC2-LEAF1A: Connecting\"} {\"level\":\"warn\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"DEPRECATED: The 'NoTLS' target flag has been deprecated and will be removed in a future release. Please use 'NoTLSVerify' instead.\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Target DC2-LEAF1A: Subscribing\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Target DC2-LF70: Connecting\"} {\"level\":\"warn\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"DEPRECATED: The 'NoTLS' target flag has been deprecated and will be removed in a future release. Please use 'NoTLSVerify' instead.\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Target DC2-LF70: Subscribing\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Target DC2-SP02: Connected\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:36-04:00\",\"message\":\"Target DC2-LF70: Connected\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:36-04:00\",\"message\":\"Target DC2-LEAF1A: Connected\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:37-04:00\",\"message\":\"Target DC2-LF70: Synced\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:37-04:00\",\"message\":\"Target DC2-SP02: Synced\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:38-04:00\",\"message\":\"Target DC2-LEAF1A: Synced\"} The output tells us that gNMI-gateway has started and began to serve up gNMI requests to the /interfaces/interface path via any gNMI external client. Requesting a target managed by gNMI gateway gnmic subscribe -a 127.0.0.1 -u ansible -p ansible --port=9339 \\ --skip-verify --target=DC2-SP02 --path=/interfaces { \"source\": \"127.0.0.1:9339\", \"subscription-name\": \"default-1616158143\", \"timestamp\": 1605208845740882713, \"time\": \"2020-11-12T14:20:45.740882713-05:00\", \"target\": \"DC2-SP02\", \"updates\": [ { \"Path\": \"interfaces/interface[name=Ethernet54/1]/state/tpid\", \"values\": { \"interfaces/interface/state/tpid\": \"openconfig-vlan-types:TPID_0X8100\" } } ] } Since the gNMI gateway is running local on my macbook we can then query the service on port 9339 passing in the target value of DC2-SP02 and start to stream data back to the client.","title":"gNMI-Gateway"},{"location":"examples/gnmi-gateway/#overview","text":"gNMI gateway is a opensource project created by netflix. The idea of gNMI gateway is the gateway sits as a gateway or a proxy for multiple gNMI targets which it then manages. A gNMI client will then speak to the gNMI service(gNMI gateway) and use a gNMI target which the client will then request the path. gNMI gateway documentation can be found here NANOG demo can also be found here In this demo we will start the gNMI gateway binary and use gNMIC to then stream to a target which is managed by gNMI gateway. Please make adjustments to the targets.json file to match your own network. The demo is structured in a few different files all which have their own function. \u251c\u2500\u2500 gnmi-gateway \u251c\u2500\u2500 index.md \u251c\u2500\u2500 server.crt \u251c\u2500\u2500 server.key \u2514\u2500\u2500 targets.json gnmi-gateway - this is the binary to activate gNMI gateway server.crt / server.key - the cert for gNMI gateway targets.json - This is the file where you specify the targets gNMI-gateway supports hot reloading of the files. So if changes are made within targets.json it will reload automatically with new targets and or new paths.","title":"Overview"},{"location":"examples/gnmi-gateway/#eos-configuration","text":"management api gnmi transport grpc default ssl profile SELFSIGNED provider eos-native ! management security ssl profile SELFSIGNED certificate cvp.crt key cvp.key ! security pki certificate generate self-signed cvp.crt key cvp.key generate rsa 2048 validity 30000 parameters common-name cvp The configuration stated here will add a self signed cert to the device and start the gNMI service with the cert.","title":"EOS configuration"},{"location":"examples/gnmi-gateway/#start-gnmi-gateway","text":"./gnmi-gateway -EnableGNMIServer -ServerTLSCert=server.crt \\ -ServerTLSKey=server.key -TargetLoaders=json -TargetJSONFile=targets.json ./gnmi-gateway -EnableGNMIServer -ServerTLSCert=server.crt \\ -ServerTLSKey=server.key -TargetLoaders=json -TargetJSONFile=targets.json {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Starting GNMI Gateway.\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Clustering is NOT enabled. No locking or cluster coordination will happen.\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Starting connection manager.\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Starting gNMI server on 0.0.0.0:9339.\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Connection manager received a target control message: 3 inserts 0 removes\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Initializing target DC2-SP02 ([10.20.30.22:6030]) map[NoTLS:yes].\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Initializing target DC2-LEAF1A ([10.20.30.5:6030]) map[NoTLS:yes].\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Target DC2-SP02: Connecting\"} {\"level\":\"warn\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"DEPRECATED: The 'NoTLS' target flag has been deprecated and will be removed in a future release. Please use 'NoTLSVerify' instead.\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Target DC2-SP02: Subscribing\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Initializing target DC2-LF70 ([10.20.30.70:6030]) map[NoTLS:yes].\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Target DC2-LEAF1A: Connecting\"} {\"level\":\"warn\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"DEPRECATED: The 'NoTLS' target flag has been deprecated and will be removed in a future release. Please use 'NoTLSVerify' instead.\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Target DC2-LEAF1A: Subscribing\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Target DC2-LF70: Connecting\"} {\"level\":\"warn\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"DEPRECATED: The 'NoTLS' target flag has been deprecated and will be removed in a future release. Please use 'NoTLSVerify' instead.\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Target DC2-LF70: Subscribing\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:35-04:00\",\"message\":\"Target DC2-SP02: Connected\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:36-04:00\",\"message\":\"Target DC2-LF70: Connected\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:36-04:00\",\"message\":\"Target DC2-LEAF1A: Connected\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:37-04:00\",\"message\":\"Target DC2-LF70: Synced\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:37-04:00\",\"message\":\"Target DC2-SP02: Synced\"} {\"level\":\"info\",\"time\":\"2021-03-19T08:47:38-04:00\",\"message\":\"Target DC2-LEAF1A: Synced\"} The output tells us that gNMI-gateway has started and began to serve up gNMI requests to the /interfaces/interface path via any gNMI external client.","title":"Start gNMI gateway"},{"location":"examples/gnmi-gateway/#requesting-a-target-managed-by-gnmi-gateway","text":"gnmic subscribe -a 127.0.0.1 -u ansible -p ansible --port=9339 \\ --skip-verify --target=DC2-SP02 --path=/interfaces { \"source\": \"127.0.0.1:9339\", \"subscription-name\": \"default-1616158143\", \"timestamp\": 1605208845740882713, \"time\": \"2020-11-12T14:20:45.740882713-05:00\", \"target\": \"DC2-SP02\", \"updates\": [ { \"Path\": \"interfaces/interface[name=Ethernet54/1]/state/tpid\", \"values\": { \"interfaces/interface/state/tpid\": \"openconfig-vlan-types:TPID_0X8100\" } } ] } Since the gNMI gateway is running local on my macbook we can then query the service on port 9339 passing in the target value of DC2-SP02 and start to stream data back to the client.","title":"Requesting a target managed by gNMI gateway"},{"location":"examples/golang/","text":"Overview The following example uses the goarista go module for gNMI to interact with a device. Within this very simplistic getting started example main.go will simply perform a get method to the device for all paths. go run main.go Truncated output { \"openconfig-acl:acl\": { \"state\": { \"counter-capability\": \"AGGREGATE_ONLY\" } }, \"arista-exp-eos:arista\": { \"eos\": { \"arista-exp-eos-igmpsnooping:bridging\": { \"igmpsnooping\": { \"config\": {} } }, \"arista-exp-eos-mlag:mlag\": { \"config\": { \"dual-primary-action\": \"action-none\",","title":"golang"},{"location":"examples/golang/#overview","text":"The following example uses the goarista go module for gNMI to interact with a device. Within this very simplistic getting started example main.go will simply perform a get method to the device for all paths. go run main.go","title":"Overview"},{"location":"examples/golang/#truncated-output","text":"{ \"openconfig-acl:acl\": { \"state\": { \"counter-capability\": \"AGGREGATE_ONLY\" } }, \"arista-exp-eos:arista\": { \"eos\": { \"arista-exp-eos-igmpsnooping:bridging\": { \"igmpsnooping\": { \"config\": {} } }, \"arista-exp-eos-mlag:mlag\": { \"config\": { \"dual-primary-action\": \"action-none\",","title":"Truncated output"},{"location":"examples/python/","text":"Overview The following example uses the pygnmi python module to talk to gNMI devices. python3 pygnmi.py The following will simply run the pygnmi.py file using python3 to get the openconfig interfaces. Truncated output { \"notification\": [ { \"timestamp\": 0, \"update\": [ { \"path\": \"interfaces\", \"json_ietf_val\": { \"openconfig-interfaces:interface\": [ { \"config\": { \"enabled\": true, \"arista-intf-augments:load-interval\": 300, \"loopback-mode\": false, \"mtu\": 0, \"name\": \"Ethernet1\", \"openconfig-vlan:tpid\": \"openconfig-vlan-types:TPID_0X8100\", \"type\": \"iana-if-type:ethernetCsmacd\" },","title":"python"},{"location":"examples/python/#overview","text":"The following example uses the pygnmi python module to talk to gNMI devices. python3 pygnmi.py The following will simply run the pygnmi.py file using python3 to get the openconfig interfaces.","title":"Overview"},{"location":"examples/python/#truncated-output","text":"{ \"notification\": [ { \"timestamp\": 0, \"update\": [ { \"path\": \"interfaces\", \"json_ietf_val\": { \"openconfig-interfaces:interface\": [ { \"config\": { \"enabled\": true, \"arista-intf-augments:load-interval\": 300, \"loopback-mode\": false, \"mtu\": 0, \"name\": \"Ethernet1\", \"openconfig-vlan:tpid\": \"openconfig-vlan-types:TPID_0X8100\", \"type\": \"iana-if-type:ethernetCsmacd\" },","title":"Truncated output"},{"location":"models/","text":"overview What are device models and why should I care? OpenConfig models IETF models vendor-specific models References / Resources YANG RFC: https://tools.ietf.org/html/rfc6020 Repository of OpenConfig YANG models: https://github.com/openconfig/public Arista Networks YANG Repository: https://github.com/aristanetworks/yang","title":"Device Models"},{"location":"models/#overview","text":"What are device models and why should I care?","title":"overview"},{"location":"models/#openconfig-models","text":"","title":"OpenConfig models"},{"location":"models/#ietf-models","text":"","title":"IETF models"},{"location":"models/#vendor-specific-models","text":"","title":"vendor-specific models"},{"location":"models/#references-resources","text":"YANG RFC: https://tools.ietf.org/html/rfc6020 Repository of OpenConfig YANG models: https://github.com/openconfig/public Arista Networks YANG Repository: https://github.com/aristanetworks/yang","title":"References / Resources"},{"location":"protocols/","text":"Overview ssh (CLI) eAPI gRPC gRPC is a Remote Procedure Call (RPC) framework that OpenConfig utilizes as a transport. Services built with gRPC are defined in .proto files. They describe the RPCs supported by the service and the data types exchanged in those RPCs. The OpenConfig group originally published openconfig.proto , but have since deprecated it in favor of gnmi.proto . The current EOS versions supports gnmi.proto v0.7 and includes support for Get, Subscribe, Set, and Capabilities RPCs. Note: Support for openconfig.proto was dropped in EOS-4.23.0F+. A client application is required to communicate with a gRPC service. A sample application can be found on the Arista GitHub account: gnmi . gnmi is a simple command-line client for gNMI written in Go that can be used for testing and prototyping. Another popular gnmi client is gnmic . NETCONF NETCONF provides mechanisms to install, manipulate and delete the configuration of network devices. It uses eXtensible Markup Language (XML) based data encoding for the configuration data as well as protocol messages. The NETCONF protocol operations are realized as RPCs over ssh transport. RESTCONF References / Resources NETCONF RFC: https://tools.ietf.org/html/rfc6241 RESTCONF RFC: https://tools.ietf.org/html/rfc8040","title":"Management Protocols"},{"location":"protocols/#overview","text":"","title":"Overview"},{"location":"protocols/#ssh-cli","text":"","title":"ssh (CLI)"},{"location":"protocols/#eapi","text":"","title":"eAPI"},{"location":"protocols/#grpc","text":"gRPC is a Remote Procedure Call (RPC) framework that OpenConfig utilizes as a transport. Services built with gRPC are defined in .proto files. They describe the RPCs supported by the service and the data types exchanged in those RPCs. The OpenConfig group originally published openconfig.proto , but have since deprecated it in favor of gnmi.proto . The current EOS versions supports gnmi.proto v0.7 and includes support for Get, Subscribe, Set, and Capabilities RPCs. Note: Support for openconfig.proto was dropped in EOS-4.23.0F+. A client application is required to communicate with a gRPC service. A sample application can be found on the Arista GitHub account: gnmi . gnmi is a simple command-line client for gNMI written in Go that can be used for testing and prototyping. Another popular gnmi client is gnmic .","title":"gRPC"},{"location":"protocols/#netconf","text":"NETCONF provides mechanisms to install, manipulate and delete the configuration of network devices. It uses eXtensible Markup Language (XML) based data encoding for the configuration data as well as protocol messages. The NETCONF protocol operations are realized as RPCs over ssh transport.","title":"NETCONF"},{"location":"protocols/#restconf","text":"","title":"RESTCONF"},{"location":"protocols/#references-resources","text":"NETCONF RFC: https://tools.ietf.org/html/rfc6241 RESTCONF RFC: https://tools.ietf.org/html/rfc8040","title":"References / Resources"},{"location":"telemetry/","text":"overview gNMI EOS native streaming (TerminAttr) OpenConfig OpenConfig + TerminAttr (Octa) RPCs subscription types ONCE STREAM POLL References / Resources","title":"Device Telemetry"},{"location":"telemetry/#overview","text":"","title":"overview"},{"location":"telemetry/#gnmi","text":"","title":"gNMI"},{"location":"telemetry/#eos-native-streaming-terminattr","text":"","title":"EOS native streaming (TerminAttr)"},{"location":"telemetry/#openconfig","text":"","title":"OpenConfig"},{"location":"telemetry/#openconfig-terminattr-octa","text":"","title":"OpenConfig + TerminAttr (Octa)"},{"location":"telemetry/#rpcs","text":"","title":"RPCs"},{"location":"telemetry/#subscription-types","text":"","title":"subscription types"},{"location":"telemetry/#once","text":"","title":"ONCE"},{"location":"telemetry/#stream","text":"","title":"STREAM"},{"location":"telemetry/#poll","text":"","title":"POLL"},{"location":"telemetry/#references-resources","text":"","title":"References / Resources"}]}